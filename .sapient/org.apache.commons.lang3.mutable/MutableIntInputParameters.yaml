---
targetClass:
  fullClassName: "org.apache.commons.lang3.mutable.MutableInt"
methods:
- method:
    name: "add"
    sourceCodeSignature: "void add(final int operand)"
    returnType: "void"
    parameters:
    - name: "operand"
      type: "int"
    instructionFingerprint: "99CA284CCB0B54EC27726BDA9BE2D290"
  paths:
  - testPathName: "addTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "operand"
      valueUuid: "operand"
    - type: "RESULT"
      name: "result"
      valueUuid: "void"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.mutable.MutableInt"
        parameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "value"
      valueType: "org.apache.commons.lang3.mutable.MutableInt"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "operand"
    - sapientType: "VOID"
      uuid: "void"
- method:
    name: "add"
    sourceCodeSignature: "void add(final Number operand)"
    returnType: "void"
    parameters:
    - name: "operand"
      type: "java.lang.Number"
    instructionFingerprint: "512411D75CE0B65677D73A54EBA84B54"
  paths:
  - testPathName: "add1Test"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "operand"
      valueUuid: "operand"
    - type: "RESULT"
      name: "result"
      valueUuid: "void"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.mutable.MutableInt"
        parameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "value"
      valueType: "org.apache.commons.lang3.mutable.MutableInt"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "java.lang.Number"
      uuid: "operand"
    - sapientType: "VOID"
      uuid: "void"
- method:
    name: "addAndGet"
    sourceCodeSignature: "int addAndGet(final int operand)"
    returnType: "int"
    parameters:
    - name: "operand"
      type: "int"
    instructionFingerprint: "89C42274E1090919919EBA72856639AD"
  paths:
  - testPathName: "addAndGetTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "operand"
      valueUuid: "operand"
    - type: "RESULT"
      name: "result"
      valueUuid: "int1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.mutable.MutableInt"
        parameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "value"
      valueType: "org.apache.commons.lang3.mutable.MutableInt"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "operand"
    - sapientType: "BASIC"
      content: !<regular>
        value: 2
      valueType: "int"
      uuid: "int1"
- method:
    name: "addAndGet"
    sourceCodeSignature: "int addAndGet(final Number operand)"
    returnType: "int"
    parameters:
    - name: "operand"
      type: "java.lang.Number"
    instructionFingerprint: "256F5A8BDF5173F4DE9432A626B9BE60"
  paths:
  - testPathName: "addAndGet1Test"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "operand"
      valueUuid: "operand"
    - type: "RESULT"
      name: "result"
      valueUuid: "int2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.mutable.MutableInt"
        parameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "value"
      valueType: "org.apache.commons.lang3.mutable.MutableInt"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "java.lang.Number"
      uuid: "operand"
    - sapientType: "BASIC"
      content: !<regular>
        value: 2
      valueType: "int"
      uuid: "int2"
- method:
    name: "compareTo"
    sourceCodeSignature: "int compareTo(final MutableInt other)"
    returnType: "int"
    parameters:
    - name: "other"
      type: "org.apache.commons.lang3.mutable.MutableInt"
    instructionFingerprint: "B7515E73FAB8C937373A9322416A2FFE"
  paths:
  - testPathName: "compareToTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "other"
      valueUuid: "other"
    - type: "RESULT"
      name: "result"
      valueUuid: "int3"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.mutable.MutableInt"
        parameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "value"
      valueType: "org.apache.commons.lang3.mutable.MutableInt"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.mutable.MutableInt"
        parameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "other-value"
      valueType: "org.apache.commons.lang3.mutable.MutableInt"
      uuid: "other"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int3"
- method:
    name: "decrement"
    sourceCodeSignature: "void decrement()"
    returnType: "void"
    instructionFingerprint: "1B4D0F576B6621414ED2FE2CE6E0F41D"
  paths:
  - testPathName: "decrementTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      valueUuid: "void"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.mutable.MutableInt"
        parameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "value"
      valueType: "org.apache.commons.lang3.mutable.MutableInt"
      uuid: "target"
    - sapientType: "VOID"
      uuid: "void"
- method:
    name: "decrementAndGet"
    sourceCodeSignature: "int decrementAndGet()"
    returnType: "int"
    instructionFingerprint: "CB4673AD5DEAF13FD03250A3C4B915C0"
  paths:
  - testPathName: "decrementAndGetTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      valueUuid: "int1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.mutable.MutableInt"
        parameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "value"
      valueType: "org.apache.commons.lang3.mutable.MutableInt"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int1"
- method:
    name: "doubleValue"
    sourceCodeSignature: "double doubleValue()"
    returnType: "double"
    instructionFingerprint: "E2E4A886CADDF5C765EAE6ED82086247"
  paths:
  - testPathName: "doubleValueTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      valueUuid: "double1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.mutable.MutableInt"
        parameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "value"
      valueType: "org.apache.commons.lang3.mutable.MutableInt"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0.0
      valueType: "double"
      uuid: "double1"
- method:
    name: "floatValue"
    sourceCodeSignature: "float floatValue()"
    returnType: "float"
    instructionFingerprint: "CE135C5368828E2CD3943197BE6C8682"
  paths:
  - testPathName: "floatValueTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      valueUuid: "float1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.mutable.MutableInt"
        parameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "value"
      valueType: "org.apache.commons.lang3.mutable.MutableInt"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0.0
      valueType: "float"
      uuid: "float1"
- method:
    name: "getAndAdd"
    sourceCodeSignature: "int getAndAdd(final int operand)"
    returnType: "int"
    parameters:
    - name: "operand"
      type: "int"
    instructionFingerprint: "1A75B1A59D7EADCFDC8B330E000DF9AA"
  paths:
  - testPathName: "getAndAddTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "operand"
      valueUuid: "operand"
    - type: "RESULT"
      name: "result"
      valueUuid: "value"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.mutable.MutableInt"
        parameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "value"
      valueType: "org.apache.commons.lang3.mutable.MutableInt"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "operand"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "value"
- method:
    name: "getAndAdd"
    sourceCodeSignature: "int getAndAdd(final Number operand)"
    returnType: "int"
    parameters:
    - name: "operand"
      type: "java.lang.Number"
    instructionFingerprint: "441ABD0E327295265C4D4D013392D666"
  paths:
  - testPathName: "getAndAdd1Test"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "operand"
      valueUuid: "operand"
    - type: "RESULT"
      name: "result"
      valueUuid: "value"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.mutable.MutableInt"
        parameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "value"
      valueType: "org.apache.commons.lang3.mutable.MutableInt"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "java.lang.Number"
      uuid: "operand"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "value"
- method:
    name: "getAndDecrement"
    sourceCodeSignature: "int getAndDecrement()"
    returnType: "int"
    instructionFingerprint: "72E22FDD923A86222F71B9B1CBC98A4C"
  paths:
  - testPathName: "getAndDecrementTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      valueUuid: "value"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.mutable.MutableInt"
        parameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "value"
      valueType: "org.apache.commons.lang3.mutable.MutableInt"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "value"
- method:
    name: "getAndIncrement"
    sourceCodeSignature: "int getAndIncrement()"
    returnType: "int"
    instructionFingerprint: "1BBFE6C17CBCD3275DA16972B7ADE220"
  paths:
  - testPathName: "getAndIncrementTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      valueUuid: "value"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.mutable.MutableInt"
        parameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "value"
      valueType: "org.apache.commons.lang3.mutable.MutableInt"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "value"
- method:
    name: "getValue"
    sourceCodeSignature: "Integer getValue()"
    returnType: "java.lang.Integer"
    instructionFingerprint: "D8575911BDA9D69018F3EE8DC939F386"
  paths:
  - testPathName: "getValueTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      valueUuid: "integer"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.mutable.MutableInt"
        parameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "value"
      valueType: "org.apache.commons.lang3.mutable.MutableInt"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "java.lang.Integer"
      uuid: "integer"
- method:
    name: "increment"
    sourceCodeSignature: "void increment()"
    returnType: "void"
    instructionFingerprint: "A4CB866C43E98B34FD3A4AA96F184CC6"
  paths:
  - testPathName: "incrementTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      valueUuid: "void"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.mutable.MutableInt"
        parameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "value"
      valueType: "org.apache.commons.lang3.mutable.MutableInt"
      uuid: "target"
    - sapientType: "VOID"
      uuid: "void"
- method:
    name: "incrementAndGet"
    sourceCodeSignature: "int incrementAndGet()"
    returnType: "int"
    instructionFingerprint: "C8331C935E06A6BBA90BB17D2A001B0B"
  paths:
  - testPathName: "incrementAndGetTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      valueUuid: "int1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.mutable.MutableInt"
        parameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "value"
      valueType: "org.apache.commons.lang3.mutable.MutableInt"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 2
      valueType: "int"
      uuid: "int1"
- method:
    name: "intValue"
    sourceCodeSignature: "int intValue()"
    returnType: "int"
    instructionFingerprint: "5619E0B2E1E30ABB9B674E8BB0D2F4E5"
  paths:
  - testPathName: "intValueTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      valueUuid: "value"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.mutable.MutableInt"
        parameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "value"
      valueType: "org.apache.commons.lang3.mutable.MutableInt"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "value"
- method:
    name: "longValue"
    sourceCodeSignature: "long longValue()"
    returnType: "long"
    instructionFingerprint: "9E497DB7672EB6F3945242787939D76E"
  paths:
  - testPathName: "longValueTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      valueUuid: "long1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.mutable.MutableInt"
        parameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "value"
      valueType: "org.apache.commons.lang3.mutable.MutableInt"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "long"
      uuid: "long1"
- method:
    name: "setValue"
    sourceCodeSignature: "void setValue(final Number value)"
    returnType: "void"
    parameters:
    - name: "value"
      type: "java.lang.Number"
    instructionFingerprint: "0289A436E00BD0D1241A1619C590CE7A"
  paths:
  - testPathName: "setValue1Test"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "value"
      valueUuid: "value"
    - type: "RESULT"
      name: "result"
      valueUuid: "void"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.mutable.MutableInt"
        parameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "value2"
      valueType: "org.apache.commons.lang3.mutable.MutableInt"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "java.lang.Number"
      uuid: "value"
    - sapientType: "VOID"
      uuid: "void"
- method:
    name: "subtract"
    sourceCodeSignature: "void subtract(final int operand)"
    returnType: "void"
    parameters:
    - name: "operand"
      type: "int"
    instructionFingerprint: "D5650CA7695E9E2F1EF5FC351F38DB75"
  paths:
  - testPathName: "subtractTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "operand"
      valueUuid: "operand"
    - type: "RESULT"
      name: "result"
      valueUuid: "void"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.mutable.MutableInt"
        parameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "value"
      valueType: "org.apache.commons.lang3.mutable.MutableInt"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "operand"
    - sapientType: "VOID"
      uuid: "void"
- method:
    name: "subtract"
    sourceCodeSignature: "void subtract(final Number operand)"
    returnType: "void"
    parameters:
    - name: "operand"
      type: "java.lang.Number"
    instructionFingerprint: "C087A727C8F0FD2F2232EC317AE491CC"
  paths:
  - testPathName: "subtract1Test"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "operand"
      valueUuid: "operand"
    - type: "RESULT"
      name: "result"
      valueUuid: "void"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.mutable.MutableInt"
        parameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "value"
      valueType: "org.apache.commons.lang3.mutable.MutableInt"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "java.lang.Number"
      uuid: "operand"
    - sapientType: "VOID"
      uuid: "void"
- method:
    name: "toInteger"
    sourceCodeSignature: "Integer toInteger()"
    returnType: "java.lang.Integer"
    instructionFingerprint: "D790D1750C840E0780C847BBBE3875A9"
  paths:
  - testPathName: "toIntegerTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      valueUuid: "integer"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.mutable.MutableInt"
        parameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "value"
      valueType: "org.apache.commons.lang3.mutable.MutableInt"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "java.lang.Integer"
      uuid: "integer"
- method:
    name: "toString"
    sourceCodeSignature: "String toString()"
    returnType: "java.lang.String"
    instructionFingerprint: "BAFFA62ADB3FEAD964701E8F86E6596A"
  paths:
  - testPathName: "toStringTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      valueUuid: "string"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.mutable.MutableInt"
        parameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "value"
      valueType: "org.apache.commons.lang3.mutable.MutableInt"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "2"
      valueType: "java.lang.String"
      uuid: "string"
