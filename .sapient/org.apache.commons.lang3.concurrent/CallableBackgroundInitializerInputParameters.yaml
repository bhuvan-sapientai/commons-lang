---
targetClass:
  fullClassName: "org.apache.commons.lang3.concurrent.CallableBackgroundInitializer"
methods:
- method:
    name: "getTypedException"
    sourceCodeSignature: "Exception getTypedException(Exception e)"
    returnType: "java.lang.Exception"
    parameters:
    - name: "e"
      type: "java.lang.Exception"
    instructionFingerprint: "B2B458D1A27363F8A42AE28E0DD4E39D"
  paths:
  - testPathName: "getTypedException1Test"
    constructorSignature: "<init>(java.util.concurrent.Callable<java.lang.Object>,java.util.concurrent.ExecutorService)\
      \ : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "e"
      valueUuid: "e"
    - type: "RESULT"
      name: "result"
      valueUuid: "exception"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.concurrent.CallableBackgroundInitializer"
        parameters:
        - name: "call"
          value:
            sapientType: "MOCK"
            valueType: "java.util.concurrent.Callable"
            uuid: "call"
        - name: "exec"
          value:
            sapientType: "MOCK"
            valueType: "java.util.concurrent.ExecutorService"
            uuid: "exec"
      valueType: "org.apache.commons.lang3.concurrent.CallableBackgroundInitializer"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
      valueType: "java.lang.Exception"
      uuid: "e"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters:
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Exception"
              parameters: []
            valueType: "java.lang.Exception"
            uuid: "e"
      valueType: "java.lang.Exception"
      uuid: "exception"
- method:
    name: "initialize"
    sourceCodeSignature: "T initialize()"
    returnType: "java.lang.Object"
    throwsExceptions:
    - "java.lang.Exception"
    instructionFingerprint: "C8D00E918A788E4E93F368238C536CCE"
  paths:
  - testPathName: "initialize1Test"
    constructorSignature: "<init>(java.util.concurrent.Callable<java.lang.Object>,java.util.concurrent.ExecutorService)\
      \ : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      valueUuid: "object"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_POTENTIAL_HARM_FULL_SYSTEM_CALL"
      source: "return callable.call();"
      lineNumber: 129
      details: "Potential harmful system call (Callable.call) detected; Learn more:\
        \ https://github.com/Sapient-AI/docs#disabled-generated-tests"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.concurrent.CallableBackgroundInitializer"
        parameters:
        - name: "call"
          value:
            sapientType: "MOCK"
            valueType: "java.util.concurrent.Callable"
            uuid: "call"
        - name: "exec"
          value:
            sapientType: "MOCK"
            valueType: "java.util.concurrent.ExecutorService"
            uuid: "exec"
      valueType: "org.apache.commons.lang3.concurrent.CallableBackgroundInitializer"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
