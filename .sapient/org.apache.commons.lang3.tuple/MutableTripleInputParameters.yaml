---
targetClass:
  fullClassName: "org.apache.commons.lang3.tuple.MutableTriple"
methods:
- method:
    name: "emptyArray"
    sourceCodeSignature: "<L, M, R> MutableTriple<L, M, R>[] emptyArray()"
    returnType: "org.apache.commons.lang3.tuple.MutableTriple[]"
    genericReturnType: "java.lang.Object,java.lang.Object,java.lang.Object"
    instructionFingerprint: "0BA4F916BC0FEB3F7E8CB34FFB43CD98"
  paths:
  - testPathName: "emptyArray1Test"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "RESULT"
      name: "result"
      valueUuid: "mutableTripleArray"
    disabled: false
    allValues:
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.apache.commons.lang3.tuple.MutableTriple[]"
      genericValueType: "java.lang.Object,java.lang.Object,java.lang.Object"
      uuid: "mutableTripleArray"
- method:
    name: "of"
    sourceCodeSignature: "<L, M, R> MutableTriple<L, M, R> of(final L left, final\
      \ M middle, final R right)"
    returnType: "org.apache.commons.lang3.tuple.MutableTriple"
    genericReturnType: "java.lang.Object,java.lang.Object,java.lang.Object"
    parameters:
    - name: "left"
      type: "java.lang.Object"
    - name: "middle"
      type: "java.lang.Object"
    - name: "right"
      type: "java.lang.Object"
    instructionFingerprint: "ED94FAEFC2B1F4C1A93CC948F1F7B856"
  paths:
  - testPathName: "of1Test"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "left"
      valueUuid: "left"
    - type: "INPUT"
      name: "middle"
      valueUuid: "middle"
    - type: "INPUT"
      name: "right"
      valueUuid: "right"
    - type: "RESULT"
      name: "result"
      valueUuid: "mutableTriple"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "left"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "middle"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "right"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.tuple.MutableTriple"
        parameters:
        - name: "left"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "left"
        - name: "middle"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "middle"
        - name: "right"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "right"
      valueType: "org.apache.commons.lang3.tuple.MutableTriple"
      genericValueType: "java.lang.Object,java.lang.Object,java.lang.Object"
      uuid: "mutableTriple"
- method:
    name: "ofNonNull"
    sourceCodeSignature: "<L, M, R> MutableTriple<L, M, R> ofNonNull(final L left,\
      \ final M middle, final R right)"
    returnType: "org.apache.commons.lang3.tuple.MutableTriple"
    genericReturnType: "java.lang.Object,java.lang.Object,java.lang.Object"
    parameters:
    - name: "left"
      type: "java.lang.Object"
    - name: "middle"
      type: "java.lang.Object"
    - name: "right"
      type: "java.lang.Object"
    instructionFingerprint: "13141EFFC696D55101AA9A21B61160E1"
  paths:
  - testPathName: "ofNonNull1Test"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "left"
      valueUuid: "left"
    - type: "INPUT"
      name: "middle"
      valueUuid: "middle"
    - type: "INPUT"
      name: "right"
      valueUuid: "right"
    - type: "STATIC"
      name: "MutableTriple.class"
      valueUuid: "MutableTriple.class"
      methodExercised:
        expression: "of(left,middle,right):mutableTriple"
    - type: "RESULT"
      name: "result"
      valueUuid: "mutableTriple"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "left"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "middle"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "right"
    - sapientType: "MOCK"
      valueType: "org.apache.commons.lang3.tuple.MutableTriple"
      uuid: "MutableTriple.class"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.tuple.MutableTriple"
        parameters: []
      valueType: "org.apache.commons.lang3.tuple.MutableTriple"
      genericValueType: "java.lang.Object,java.lang.Object,java.lang.Object"
      uuid: "mutableTriple"
