---
targetClass:
  fullClassName: "org.apache.commons.lang3.builder.EqualsBuilder"
methods:
- method:
    name: "getRegisterPair"
    sourceCodeSignature: "Pair<IDKey, IDKey> getRegisterPair(final Object lhs, final\
      \ Object rhs)"
    returnType: "org.apache.commons.lang3.tuple.Pair"
    genericReturnType: "org.apache.commons.lang3.builder.IDKey,org.apache.commons.lang3.builder.IDKey"
    parameters:
    - name: "lhs"
      type: "java.lang.Object"
    - name: "rhs"
      type: "java.lang.Object"
    instructionFingerprint: "DE6CDB5296AD9FEBB3BB203E2906ED05"
  paths:
  - testPathName: "getRegisterPairTest"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "pair"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "lhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "rhs"
    - sapientType: "PAIR"
      content: !<pair>
        key:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.apache.commons.lang3.builder.IDKey"
            parameters:
            - name: "value"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "java.lang.Object"
                  parameters: []
                valueType: "java.lang.Object"
                uuid: "lhs"
          valueType: "org.apache.commons.lang3.builder.IDKey"
          uuid: "iDKey"
        value:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.apache.commons.lang3.builder.IDKey"
            parameters:
            - name: "value"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "java.lang.Object"
                  parameters: []
                valueType: "java.lang.Object"
                uuid: "rhs"
          valueType: "org.apache.commons.lang3.builder.IDKey"
          uuid: "iDKey2"
      valueType: "org.apache.commons.lang3.tuple.Pair"
      genericValueType: "org.apache.commons.lang3.builder.IDKey,org.apache.commons.lang3.builder.IDKey"
      uuid: "pair"
- method:
    name: "getRegistry"
    sourceCodeSignature: "Set<Pair<IDKey, IDKey>> getRegistry()"
    returnType: "java.util.Set"
    genericReturnType: "org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey,org.apache.commons.lang3.builder.IDKey>"
    instructionFingerprint: "73725D36F35F416E88B99C5A4CA004BA"
  paths:
  - testPathName: "getRegistryTest"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "RESULT"
      name: "result"
      valueUuid: "object"
    disabled: false
    allValues:
    - sapientType: "NULL"
      valueType: "java.util.Set"
      uuid: "object"
- method:
    name: "isRegistered"
    sourceCodeSignature: "boolean isRegistered(final Object lhs, final Object rhs)"
    returnType: "boolean"
    parameters:
    - name: "lhs"
      type: "java.lang.Object"
    - name: "rhs"
      type: "java.lang.Object"
    instructionFingerprint: "75648C656B7EE2B7CB543395818CE025"
  paths:
  - testPathName: "isRegisteredWhenRegistryIsNull"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "STATIC"
      name: "EqualsBuilder.class"
      valueUuid: "EqualsBuilder.class"
      methodExercised:
        expression: "getRegisterPair(lhs,rhs):pair"
    - type: "RESULT"
      name: "result"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "lhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "rhs"
    - sapientType: "MOCK"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "EqualsBuilder.class"
    - sapientType: "PAIR"
      content: !<pair>
        key:
          sapientType: "MOCK"
          valueType: "org.apache.commons.lang3.builder.IDKey"
          uuid: "pairKey"
        value:
          sapientType: "MOCK"
          valueType: "org.apache.commons.lang3.builder.IDKey"
          uuid: "object2"
      valueType: "org.apache.commons.lang3.tuple.Pair"
      genericValueType: "org.apache.commons.lang3.builder.IDKey,org.apache.commons.lang3.builder.IDKey"
      uuid: "pair"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
    branches:
    - lineNumber: 156
      expression: "registry != null"
      range: "(156,16)-(156,31)"
      evaluatedAs: false
    mockedStaticClassesWithCallRealMethods:
    - "org.apache.commons.lang3.builder.EqualsBuilder"
- method:
    name: "reflectionEquals"
    sourceCodeSignature: "boolean reflectionEquals(final Object lhs, final Object\
      \ rhs, final boolean testTransients)"
    returnType: "boolean"
    parameters:
    - name: "lhs"
      type: "java.lang.Object"
    - name: "rhs"
      type: "java.lang.Object"
    - name: "testTransients"
      type: "boolean"
    instructionFingerprint: "A7DB87C378CFF0CB036380576B3ECF41"
  paths:
  - testPathName: "reflectionEqualsWhenReflectionEqualsLhsRhsTestTransientsNull"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INPUT"
      name: "testTransients"
      valueUuid: "testTransients"
    - type: "STATIC"
      name: "EqualsBuilder.class"
      valueUuid: "EqualsBuilder.class"
      methodExercised:
        expression: "reflectionEquals(lhs,rhs,testTransients,reflectUpToClass,stringArray):boolean1"
    - type: "RESULT"
      name: "result"
      valueUuid: "boolean1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "lhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "rhs"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "testTransients"
    - sapientType: "MOCK"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "EqualsBuilder.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      uuid: "reflectUpToClass"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    branches:
    - lineNumber: 184
      expression: "reflectionEquals(lhs, rhs, testTransients, null)"
      range: "(184,16)-(184,63)"
      evaluatedAs: true
  - testPathName: "reflectionEqualsWhenReflectionEqualsNotLhsRhsTestTransientsNull"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INPUT"
      name: "testTransients"
      valueUuid: "testTransients"
    - type: "STATIC"
      name: "EqualsBuilder.class"
      valueUuid: "EqualsBuilder.class"
      methodExercised:
        expression: "reflectionEquals(lhs,rhs,testTransients,reflectUpToClass,stringArray):boolean1"
    - type: "RESULT"
      name: "result"
      valueUuid: "boolean1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "lhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "rhs"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "testTransients"
    - sapientType: "MOCK"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "EqualsBuilder.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      uuid: "reflectUpToClass"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    branches:
    - lineNumber: 184
      expression: "reflectionEquals(lhs, rhs, testTransients, null)"
      range: "(184,16)-(184,63)"
      evaluatedAs: false
- method:
    name: "reflectionEquals"
    sourceCodeSignature: "boolean reflectionEquals(final Object lhs, final Object\
      \ rhs, final boolean testTransients, final Class<?> reflectUpToClass, final\
      \ boolean testRecursive, final String... excludeFields)"
    returnType: "boolean"
    parameters:
    - name: "lhs"
      type: "java.lang.Object"
    - name: "rhs"
      type: "java.lang.Object"
    - name: "testTransients"
      type: "boolean"
    - name: "reflectUpToClass"
      type: "java.lang.Class"
      genericType: "?"
    - name: "testRecursive"
      type: "boolean"
    - name: "excludeFields"
      type: "java.lang.String[]"
    instructionFingerprint: "60E922A51C9C5F34CE7A3E0ED3365A66"
  paths:
  - testPathName: "reflectionEquals1WhenLhsEqualsRhs"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "testTransients"
      valueUuid: "testTransients"
    - type: "INPUT"
      name: "reflectUpToClass"
      valueUuid: "reflectUpToClass"
    - type: "INPUT"
      name: "testRecursive"
      valueUuid: "testRecursive"
    - type: "INPUT"
      name: "excludeFields"
      valueUuid: "excludeFields"
    - type: "RESULT"
      name: "result"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "lhs"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "testTransients"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "reflectUpToClass"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "testRecursive"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "excludeFields"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
    branches:
    - lineNumber: 225
      expression: "lhs == rhs"
      range: "(225,13)-(225,22)"
      evaluatedAs: true
  - testPathName: "reflectionEquals1WhenRhsIsNull"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INPUT"
      name: "testTransients"
      valueUuid: "testTransients"
    - type: "INPUT"
      name: "reflectUpToClass"
      valueUuid: "reflectUpToClass"
    - type: "INPUT"
      name: "testRecursive"
      valueUuid: "testRecursive"
    - type: "INPUT"
      name: "excludeFields"
      valueUuid: "excludeFields"
    - type: "RESULT"
      name: "result"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "lhs"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "rhs"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "testTransients"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "reflectUpToClass"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "testRecursive"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "excludeFields"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
    branches:
    - lineNumber: 225
      expression: "lhs == rhs"
      range: "(225,13)-(225,22)"
      evaluatedAs: false
    - lineNumber: 228
      expression: "lhs == null"
      range: "(228,13)-(228,23)"
      evaluatedAs: false
    - lineNumber: 228
      expression: "rhs == null"
      range: "(228,28)-(228,38)"
      evaluatedAs: true
  - testPathName: "reflectionEquals1WhenNewEqualsBuilderSetExcludeFieldsExcludeFieldsSetReflectUpToClassReflectUpToClassSetTestTransientsT"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INPUT"
      name: "testTransients"
      valueUuid: "testTransients"
    - type: "INPUT"
      name: "reflectUpToClass"
      valueUuid: "reflectUpToClass"
    - type: "INPUT"
      name: "testRecursive"
      valueUuid: "testRecursive"
    - type: "INPUT"
      name: "excludeFields"
      valueUuid: "excludeFields"
    - type: "RESULT"
      name: "result"
      valueUuid: "boolean2"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".setReflectUpToClass(reflectUpToClass)"
      lineNumber: 233
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type EqualsBuilder - Method: setReflectUpToClass"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "lhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "rhs"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "testTransients"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "reflectUpToClass"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "testRecursive"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "excludeFields"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    branches:
    - lineNumber: 225
      expression: "lhs == rhs"
      range: "(225,13)-(225,22)"
      evaluatedAs: false
    - lineNumber: 228
      expression: "lhs == null"
      range: "(228,13)-(228,23)"
      evaluatedAs: false
    - lineNumber: 228
      expression: "rhs == null"
      range: "(228,28)-(228,38)"
      evaluatedAs: false
    - lineNumber: 231
      expression: "new EqualsBuilder().setExcludeFields(excludeFields).setReflectUpToClass(reflectUpToClass).setTestTransients(testTransients).setTestRecursive(testRecursive).reflectionAppend(lhs,\
        \ rhs).isEquals()"
      range: "(231,16)-(237,31)"
      evaluatedAs: true
  - testPathName: "reflectionEquals1WhenNewEqualsBuilderSetExcludeFieldsExcludeFieldsSetReflectUpToClassReflectUpToClassSetTestTransientsT2"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INPUT"
      name: "testTransients"
      valueUuid: "testTransients"
    - type: "INPUT"
      name: "reflectUpToClass"
      valueUuid: "reflectUpToClass"
    - type: "INPUT"
      name: "testRecursive"
      valueUuid: "testRecursive"
    - type: "INPUT"
      name: "excludeFields"
      valueUuid: "excludeFields"
    - type: "RESULT"
      name: "result"
      valueUuid: "boolean2"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".setReflectUpToClass(reflectUpToClass)"
      lineNumber: 233
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type EqualsBuilder - Method: setReflectUpToClass"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "lhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "rhs"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "testTransients"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "reflectUpToClass"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "testRecursive"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "excludeFields"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    branches:
    - lineNumber: 225
      expression: "lhs == rhs"
      range: "(225,13)-(225,22)"
      evaluatedAs: false
    - lineNumber: 228
      expression: "lhs == null"
      range: "(228,13)-(228,23)"
      evaluatedAs: false
    - lineNumber: 228
      expression: "rhs == null"
      range: "(228,28)-(228,38)"
      evaluatedAs: false
    - lineNumber: 231
      expression: "new EqualsBuilder().setExcludeFields(excludeFields).setReflectUpToClass(reflectUpToClass).setTestTransients(testTransients).setTestRecursive(testRecursive).reflectionAppend(lhs,\
        \ rhs).isEquals()"
      range: "(231,16)-(237,31)"
      evaluatedAs: false
- method:
    name: "reflectionEquals"
    sourceCodeSignature: "boolean reflectionEquals(final Object lhs, final Object\
      \ rhs, final boolean testTransients, final Class<?> reflectUpToClass, final\
      \ String... excludeFields)"
    returnType: "boolean"
    parameters:
    - name: "lhs"
      type: "java.lang.Object"
    - name: "rhs"
      type: "java.lang.Object"
    - name: "testTransients"
      type: "boolean"
    - name: "reflectUpToClass"
      type: "java.lang.Class"
      genericType: "?"
    - name: "excludeFields"
      type: "java.lang.String[]"
    instructionFingerprint: "95D91DD5AD915D8CF2B6E7EAD8429923"
  paths:
  - testPathName: "reflectionEquals2WhenReflectionEqualsLhsRhsTestTransientsReflectUpToClassFalseExcludeFields"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INPUT"
      name: "testTransients"
      valueUuid: "testTransients"
    - type: "INPUT"
      name: "reflectUpToClass"
      valueUuid: "reflectUpToClass"
    - type: "INPUT"
      name: "excludeFields"
      valueUuid: "excludeFields"
    - type: "STATIC"
      name: "EqualsBuilder.class"
      valueUuid: "EqualsBuilder.class"
      methodExercised:
        expression: "reflectionEquals(lhs,rhs,testTransients,reflectUpToClass,testRecursive,excludeFields):boolean1"
    - type: "RESULT"
      name: "result"
      valueUuid: "boolean1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "lhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "rhs"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "testTransients"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "reflectUpToClass"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "excludeFields"
    - sapientType: "MOCK"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "EqualsBuilder.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "testRecursive"
    branches:
    - lineNumber: 271
      expression: "reflectionEquals(lhs, rhs, testTransients, reflectUpToClass, false,\
        \ excludeFields)"
      range: "(271,16)-(271,97)"
      evaluatedAs: true
  - testPathName: "reflectionEquals2WhenReflectionEqualsNotLhsRhsTestTransientsReflectUpToClassFalseExcludeFields"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INPUT"
      name: "testTransients"
      valueUuid: "testTransients"
    - type: "INPUT"
      name: "reflectUpToClass"
      valueUuid: "reflectUpToClass"
    - type: "INPUT"
      name: "excludeFields"
      valueUuid: "excludeFields"
    - type: "STATIC"
      name: "EqualsBuilder.class"
      valueUuid: "EqualsBuilder.class"
      methodExercised:
        expression: "reflectionEquals(lhs,rhs,testTransients,reflectUpToClass,testRecursive,excludeFields):boolean1"
    - type: "RESULT"
      name: "result"
      valueUuid: "boolean1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "lhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "rhs"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "testTransients"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "reflectUpToClass"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "excludeFields"
    - sapientType: "MOCK"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "EqualsBuilder.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "testRecursive"
    branches:
    - lineNumber: 271
      expression: "reflectionEquals(lhs, rhs, testTransients, reflectUpToClass, false,\
        \ excludeFields)"
      range: "(271,16)-(271,97)"
      evaluatedAs: false
- method:
    name: "reflectionEquals"
    sourceCodeSignature: "boolean reflectionEquals(final Object lhs, final Object\
      \ rhs, final Collection<String> excludeFields)"
    returnType: "boolean"
    parameters:
    - name: "lhs"
      type: "java.lang.Object"
    - name: "rhs"
      type: "java.lang.Object"
    - name: "excludeFields"
      type: "java.util.Collection"
      genericType: "java.lang.String"
    instructionFingerprint: "9FFE24D7FDBF53BD5B09C3B01D9BFFEA"
  paths:
  - testPathName: "reflectionEquals3WhenReflectionEqualsLhsRhsReflectionToStringBuilderToNoNullStringArrayExcludeFields"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INPUT"
      name: "excludeFields"
      valueUuid: "excludeFields"
    - type: "STATIC"
      name: "EqualsBuilder.class"
      valueUuid: "EqualsBuilder.class"
      methodExercised:
        expression: "reflectionEquals(lhs,rhs,stringArray):boolean1"
    - type: "RESULT"
      name: "result"
      valueUuid: "boolean1"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(java.util.Collection<java.lang.String>)\
        \ : java.lang.String[]"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "lhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "rhs"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "java.lang.String"
      uuid: "excludeFields"
    - sapientType: "MOCK"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "EqualsBuilder.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    branches:
    - lineNumber: 297
      expression: "reflectionEquals(lhs, rhs, ReflectionToStringBuilder.toNoNullStringArray(excludeFields))"
      range: "(297,16)-(297,103)"
      evaluatedAs: true
  - testPathName: "reflectionEquals3WhenReflectionEqualsNotLhsRhsReflectionToStringBuilderToNoNullStringArrayExcludeFields"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INPUT"
      name: "excludeFields"
      valueUuid: "excludeFields"
    - type: "STATIC"
      name: "EqualsBuilder.class"
      valueUuid: "EqualsBuilder.class"
      methodExercised:
        expression: "reflectionEquals(lhs,rhs,stringArray):boolean1"
    - type: "RESULT"
      name: "result"
      valueUuid: "boolean1"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(java.util.Collection<java.lang.String>)\
        \ : java.lang.String[]"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "lhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "rhs"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "java.lang.String"
      uuid: "excludeFields"
    - sapientType: "MOCK"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "EqualsBuilder.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    branches:
    - lineNumber: 297
      expression: "reflectionEquals(lhs, rhs, ReflectionToStringBuilder.toNoNullStringArray(excludeFields))"
      range: "(297,16)-(297,103)"
      evaluatedAs: false
- method:
    name: "reflectionEquals"
    sourceCodeSignature: "boolean reflectionEquals(final Object lhs, final Object\
      \ rhs, final String... excludeFields)"
    returnType: "boolean"
    parameters:
    - name: "lhs"
      type: "java.lang.Object"
    - name: "rhs"
      type: "java.lang.Object"
    - name: "excludeFields"
      type: "java.lang.String[]"
    instructionFingerprint: "5696014660E1753D373AB4C6135B88B6"
  paths:
  - testPathName: "reflectionEquals4WhenReflectionEqualsLhsRhsFalseNullExcludeFields"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INPUT"
      name: "excludeFields"
      valueUuid: "excludeFields"
    - type: "STATIC"
      name: "EqualsBuilder.class"
      valueUuid: "EqualsBuilder.class"
      methodExercised:
        expression: "reflectionEquals(lhs,rhs,testTransients,reflectUpToClass,excludeFields):boolean1"
    - type: "RESULT"
      name: "result"
      valueUuid: "boolean1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "lhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "rhs"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "excludeFields"
    - sapientType: "MOCK"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "EqualsBuilder.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "testTransients"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      uuid: "reflectUpToClass"
    branches:
    - lineNumber: 322
      expression: "reflectionEquals(lhs, rhs, false, null, excludeFields)"
      range: "(322,16)-(322,69)"
      evaluatedAs: true
  - testPathName: "reflectionEquals4WhenReflectionEqualsNotLhsRhsFalseNullExcludeFields"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INPUT"
      name: "excludeFields"
      valueUuid: "excludeFields"
    - type: "STATIC"
      name: "EqualsBuilder.class"
      valueUuid: "EqualsBuilder.class"
      methodExercised:
        expression: "reflectionEquals(lhs,rhs,testTransients,reflectUpToClass,excludeFields):boolean1"
    - type: "RESULT"
      name: "result"
      valueUuid: "boolean1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "lhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "rhs"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "excludeFields"
    - sapientType: "MOCK"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "EqualsBuilder.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "testTransients"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      uuid: "reflectUpToClass"
    branches:
    - lineNumber: 322
      expression: "reflectionEquals(lhs, rhs, false, null, excludeFields)"
      range: "(322,16)-(322,69)"
      evaluatedAs: false
- method:
    name: "append"
    sourceCodeSignature: "EqualsBuilder append(final boolean lhs, final boolean rhs)"
    returnType: "org.apache.commons.lang3.builder.EqualsBuilder"
    parameters:
    - name: "lhs"
      type: "boolean"
    - name: "rhs"
      type: "boolean"
    instructionFingerprint: "A642DACB4C6B0AFD1A01A8727CE6900A"
  paths:
  - testPathName: "appendWhenLhsEqualsRhs"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "lhs"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 396
      expression: "!isEquals"
      range: "(396,13)-(396,21)"
      evaluatedAs: false
    - lineNumber: 399
      expression: "lhs == rhs"
      range: "(399,20)-(399,29)"
      evaluatedAs: true
  - testPathName: "appendWhenLhsNotEqualsRhs"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "lhs"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 396
      expression: "!isEquals"
      range: "(396,13)-(396,21)"
      evaluatedAs: false
    - lineNumber: 399
      expression: "lhs == rhs"
      range: "(399,20)-(399,29)"
      evaluatedAs: false
- method:
    name: "append"
    sourceCodeSignature: "EqualsBuilder append(final boolean[] lhs, final boolean[]\
      \ rhs)"
    returnType: "org.apache.commons.lang3.builder.EqualsBuilder"
    parameters:
    - name: "lhs"
      type: "boolean[]"
    - name: "rhs"
      type: "boolean[]"
    instructionFingerprint: "FC5275C0A9A3D8C978C176F0FB873E78"
  paths:
  - testPathName: "append1WhenLhsEqualsRhs"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "lhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "boolean[]"
      uuid: "lhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 414
      expression: "!isEquals"
      range: "(414,13)-(414,21)"
      evaluatedAs: false
    - lineNumber: 417
      expression: "lhs == rhs"
      range: "(417,13)-(417,22)"
      evaluatedAs: true
  - testPathName: "append1WhenRhsIsNull"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "boolean[]"
      uuid: "lhs"
    - sapientType: "NULL"
      valueType: "boolean[]"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 414
      expression: "!isEquals"
      range: "(414,13)-(414,21)"
      evaluatedAs: false
    - lineNumber: 417
      expression: "lhs == rhs"
      range: "(417,13)-(417,22)"
      evaluatedAs: false
    - lineNumber: 420
      expression: "lhs == null"
      range: "(420,13)-(420,23)"
      evaluatedAs: false
    - lineNumber: 420
      expression: "rhs == null"
      range: "(420,28)-(420,38)"
      evaluatedAs: true
  - testPathName: "append1WhenLhsLengthNotEqualsRhsLength"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "lhsItem0"
      valueType: "boolean[]"
      uuid: "lhs"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "boolean[]"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 414
      expression: "!isEquals"
      range: "(414,13)-(414,21)"
      evaluatedAs: false
    - lineNumber: 417
      expression: "lhs == rhs"
      range: "(417,13)-(417,22)"
      evaluatedAs: false
    - lineNumber: 420
      expression: "lhs == null"
      range: "(420,13)-(420,23)"
      evaluatedAs: false
    - lineNumber: 420
      expression: "rhs == null"
      range: "(420,28)-(420,38)"
      evaluatedAs: false
    - lineNumber: 424
      expression: "lhs.length != rhs.length"
      range: "(424,13)-(424,36)"
      evaluatedAs: true
  - testPathName: "append1WhenIsEquals"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "append(boolean2,boolean3):equalsBuilder2"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "boolean2"
      valueType: "boolean[]"
      uuid: "lhs"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "boolean3"
      valueType: "boolean[]"
      uuid: "rhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "equalsBuilder2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 414
      expression: "!isEquals"
      range: "(414,13)-(414,21)"
      evaluatedAs: false
    - lineNumber: 417
      expression: "lhs == rhs"
      range: "(417,13)-(417,22)"
      evaluatedAs: false
    - lineNumber: 420
      expression: "lhs == null"
      range: "(420,13)-(420,23)"
      evaluatedAs: false
    - lineNumber: 420
      expression: "rhs == null"
      range: "(420,28)-(420,38)"
      evaluatedAs: false
    - lineNumber: 424
      expression: "lhs.length != rhs.length"
      range: "(424,13)-(424,36)"
      evaluatedAs: false
    - lineNumber: 428
      expression: "i < lhs.length"
      range: "(428,25)-(428,38)"
      evaluatedAs: true
    - lineNumber: 428
      expression: "isEquals"
      range: "(428,43)-(428,50)"
      evaluatedAs: true
- method:
    name: "append"
    sourceCodeSignature: "EqualsBuilder append(final byte lhs, final byte rhs)"
    returnType: "org.apache.commons.lang3.builder.EqualsBuilder"
    parameters:
    - name: "lhs"
      type: "byte"
    - name: "rhs"
      type: "byte"
    instructionFingerprint: "472BD444EE736B6D83118B6AD2AE19DC"
  paths:
  - testPathName: "append2WhenLhsEqualsRhs"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "byte"
      uuid: "lhs"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "byte"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 442
      expression: "!isEquals"
      range: "(442,13)-(442,21)"
      evaluatedAs: false
    - lineNumber: 445
      expression: "lhs == rhs"
      range: "(445,20)-(445,29)"
      evaluatedAs: true
  - testPathName: "append2WhenLhsNotEqualsRhs"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "byte"
      uuid: "lhs"
    - sapientType: "BASIC"
      content: !<regular>
        value: 2
      valueType: "byte"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 442
      expression: "!isEquals"
      range: "(442,13)-(442,21)"
      evaluatedAs: false
    - lineNumber: 445
      expression: "lhs == rhs"
      range: "(445,20)-(445,29)"
      evaluatedAs: false
- method:
    name: "append"
    sourceCodeSignature: "EqualsBuilder append(final byte[] lhs, final byte[] rhs)"
    returnType: "org.apache.commons.lang3.builder.EqualsBuilder"
    parameters:
    - name: "lhs"
      type: "byte[]"
    - name: "rhs"
      type: "byte[]"
    instructionFingerprint: "327CA7E6E0031585C69D4F8D9BEEFF50"
  paths:
  - testPathName: "append3WhenLhsEqualsRhs"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "lhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "lhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 460
      expression: "!isEquals"
      range: "(460,13)-(460,21)"
      evaluatedAs: false
    - lineNumber: 463
      expression: "lhs == rhs"
      range: "(463,13)-(463,22)"
      evaluatedAs: true
  - testPathName: "append3WhenRhsIsNull"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "lhs"
    - sapientType: "NULL"
      valueType: "byte[]"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 460
      expression: "!isEquals"
      range: "(460,13)-(460,21)"
      evaluatedAs: false
    - lineNumber: 463
      expression: "lhs == rhs"
      range: "(463,13)-(463,22)"
      evaluatedAs: false
    - lineNumber: 466
      expression: "lhs == null"
      range: "(466,13)-(466,23)"
      evaluatedAs: false
    - lineNumber: 466
      expression: "rhs == null"
      range: "(466,28)-(466,38)"
      evaluatedAs: true
  - testPathName: "append3WhenLhsLengthNotEqualsRhsLength"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            uuid: "lhsItem0"
      valueType: "byte[]"
      uuid: "lhs"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 460
      expression: "!isEquals"
      range: "(460,13)-(460,21)"
      evaluatedAs: false
    - lineNumber: 463
      expression: "lhs == rhs"
      range: "(463,13)-(463,22)"
      evaluatedAs: false
    - lineNumber: 466
      expression: "lhs == null"
      range: "(466,13)-(466,23)"
      evaluatedAs: false
    - lineNumber: 466
      expression: "rhs == null"
      range: "(466,28)-(466,38)"
      evaluatedAs: false
    - lineNumber: 470
      expression: "lhs.length != rhs.length"
      range: "(470,13)-(470,36)"
      evaluatedAs: true
  - testPathName: "append3WhenIsEquals"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "append(byte1,byte2):equalsBuilder2"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            uuid: "byte1"
      valueType: "byte[]"
      uuid: "lhs"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            uuid: "byte2"
      valueType: "byte[]"
      uuid: "rhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "equalsBuilder2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "byte"
      uuid: "byte1"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "byte"
      uuid: "byte2"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 460
      expression: "!isEquals"
      range: "(460,13)-(460,21)"
      evaluatedAs: false
    - lineNumber: 463
      expression: "lhs == rhs"
      range: "(463,13)-(463,22)"
      evaluatedAs: false
    - lineNumber: 466
      expression: "lhs == null"
      range: "(466,13)-(466,23)"
      evaluatedAs: false
    - lineNumber: 466
      expression: "rhs == null"
      range: "(466,28)-(466,38)"
      evaluatedAs: false
    - lineNumber: 470
      expression: "lhs.length != rhs.length"
      range: "(470,13)-(470,36)"
      evaluatedAs: false
    - lineNumber: 474
      expression: "i < lhs.length"
      range: "(474,25)-(474,38)"
      evaluatedAs: true
    - lineNumber: 474
      expression: "isEquals"
      range: "(474,43)-(474,50)"
      evaluatedAs: true
- method:
    name: "append"
    sourceCodeSignature: "EqualsBuilder append(final char lhs, final char rhs)"
    returnType: "org.apache.commons.lang3.builder.EqualsBuilder"
    parameters:
    - name: "lhs"
      type: "char"
    - name: "rhs"
      type: "char"
    instructionFingerprint: "6F658FD0C84F169548721367989FB3FF"
  paths:
  - testPathName: "append4WhenLhsEqualsRhs"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "char"
      uuid: "lhs"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "char"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 488
      expression: "!isEquals"
      range: "(488,13)-(488,21)"
      evaluatedAs: false
    - lineNumber: 491
      expression: "lhs == rhs"
      range: "(491,20)-(491,29)"
      evaluatedAs: true
  - testPathName: "append4WhenLhsNotEqualsRhs"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "char"
      uuid: "lhs"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "char"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 488
      expression: "!isEquals"
      range: "(488,13)-(488,21)"
      evaluatedAs: false
    - lineNumber: 491
      expression: "lhs == rhs"
      range: "(491,20)-(491,29)"
      evaluatedAs: false
- method:
    name: "append"
    sourceCodeSignature: "EqualsBuilder append(final char[] lhs, final char[] rhs)"
    returnType: "org.apache.commons.lang3.builder.EqualsBuilder"
    parameters:
    - name: "lhs"
      type: "char[]"
    - name: "rhs"
      type: "char[]"
    instructionFingerprint: "C809FB4C2364EE8E5E5F603B946CBF50"
  paths:
  - testPathName: "append5WhenLhsEqualsRhs"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "lhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "char[]"
      uuid: "lhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 506
      expression: "!isEquals"
      range: "(506,13)-(506,21)"
      evaluatedAs: false
    - lineNumber: 509
      expression: "lhs == rhs"
      range: "(509,13)-(509,22)"
      evaluatedAs: true
  - testPathName: "append5WhenRhsIsNull"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "char[]"
      uuid: "lhs"
    - sapientType: "NULL"
      valueType: "char[]"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 506
      expression: "!isEquals"
      range: "(506,13)-(506,21)"
      evaluatedAs: false
    - lineNumber: 509
      expression: "lhs == rhs"
      range: "(509,13)-(509,22)"
      evaluatedAs: false
    - lineNumber: 512
      expression: "lhs == null"
      range: "(512,13)-(512,23)"
      evaluatedAs: false
    - lineNumber: 512
      expression: "rhs == null"
      range: "(512,28)-(512,38)"
      evaluatedAs: true
  - testPathName: "append5WhenLhsLengthNotEqualsRhsLength"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "lhsItem0"
      valueType: "char[]"
      uuid: "lhs"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "char[]"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 506
      expression: "!isEquals"
      range: "(506,13)-(506,21)"
      evaluatedAs: false
    - lineNumber: 509
      expression: "lhs == rhs"
      range: "(509,13)-(509,22)"
      evaluatedAs: false
    - lineNumber: 512
      expression: "lhs == null"
      range: "(512,13)-(512,23)"
      evaluatedAs: false
    - lineNumber: 512
      expression: "rhs == null"
      range: "(512,28)-(512,38)"
      evaluatedAs: false
    - lineNumber: 516
      expression: "lhs.length != rhs.length"
      range: "(516,13)-(516,36)"
      evaluatedAs: true
  - testPathName: "append5WhenIsEquals"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "append(char1,char2):equalsBuilder2"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "char1"
      valueType: "char[]"
      uuid: "lhs"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "char2"
      valueType: "char[]"
      uuid: "rhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "equalsBuilder2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "char"
      uuid: "char1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "char"
      uuid: "char2"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 506
      expression: "!isEquals"
      range: "(506,13)-(506,21)"
      evaluatedAs: false
    - lineNumber: 509
      expression: "lhs == rhs"
      range: "(509,13)-(509,22)"
      evaluatedAs: false
    - lineNumber: 512
      expression: "lhs == null"
      range: "(512,13)-(512,23)"
      evaluatedAs: false
    - lineNumber: 512
      expression: "rhs == null"
      range: "(512,28)-(512,38)"
      evaluatedAs: false
    - lineNumber: 516
      expression: "lhs.length != rhs.length"
      range: "(516,13)-(516,36)"
      evaluatedAs: false
    - lineNumber: 520
      expression: "i < lhs.length"
      range: "(520,25)-(520,38)"
      evaluatedAs: true
    - lineNumber: 520
      expression: "isEquals"
      range: "(520,43)-(520,50)"
      evaluatedAs: true
- method:
    name: "append"
    sourceCodeSignature: "EqualsBuilder append(final double lhs, final double rhs)"
    returnType: "org.apache.commons.lang3.builder.EqualsBuilder"
    parameters:
    - name: "lhs"
      type: "double"
    - name: "rhs"
      type: "double"
    instructionFingerprint: "6ECFF273BCE30EBBEDF3152B4F8D1C68"
  paths:
  - testPathName: "append6WhenIsEquals"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "append(long1,long2):equalsBuilder2"
    - type: "RESULT"
      name: "result"
      valueUuid: "equalsBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1.0
      valueType: "double"
      uuid: "lhs"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0.5
      valueType: "double"
      uuid: "rhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "equalsBuilder2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 4607182418800017408
      valueType: "long"
      uuid: "long1"
    - sapientType: "BASIC"
      content: !<regular>
        value: 4602678819172646912
      valueType: "long"
      uuid: "long2"
    branches:
    - lineNumber: 540
      expression: "!isEquals"
      range: "(540,13)-(540,21)"
      evaluatedAs: false
- method:
    name: "append"
    sourceCodeSignature: "EqualsBuilder append(final double[] lhs, final double[]\
      \ rhs)"
    returnType: "org.apache.commons.lang3.builder.EqualsBuilder"
    parameters:
    - name: "lhs"
      type: "double[]"
    - name: "rhs"
      type: "double[]"
    instructionFingerprint: "7179C7EB9D023B765306A650423C2040"
  paths:
  - testPathName: "append7WhenLhsEqualsRhs"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "lhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "double[]"
      uuid: "lhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 557
      expression: "!isEquals"
      range: "(557,13)-(557,21)"
      evaluatedAs: false
    - lineNumber: 560
      expression: "lhs == rhs"
      range: "(560,13)-(560,22)"
      evaluatedAs: true
  - testPathName: "append7WhenRhsIsNull"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "double[]"
      uuid: "lhs"
    - sapientType: "NULL"
      valueType: "double[]"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 557
      expression: "!isEquals"
      range: "(557,13)-(557,21)"
      evaluatedAs: false
    - lineNumber: 560
      expression: "lhs == rhs"
      range: "(560,13)-(560,22)"
      evaluatedAs: false
    - lineNumber: 563
      expression: "lhs == null"
      range: "(563,13)-(563,23)"
      evaluatedAs: false
    - lineNumber: 563
      expression: "rhs == null"
      range: "(563,28)-(563,38)"
      evaluatedAs: true
  - testPathName: "append7WhenLhsLengthNotEqualsRhsLength"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "double"
            uuid: "lhsItem0"
      valueType: "double[]"
      uuid: "lhs"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "double[]"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 557
      expression: "!isEquals"
      range: "(557,13)-(557,21)"
      evaluatedAs: false
    - lineNumber: 560
      expression: "lhs == rhs"
      range: "(560,13)-(560,22)"
      evaluatedAs: false
    - lineNumber: 563
      expression: "lhs == null"
      range: "(563,13)-(563,23)"
      evaluatedAs: false
    - lineNumber: 563
      expression: "rhs == null"
      range: "(563,28)-(563,38)"
      evaluatedAs: false
    - lineNumber: 567
      expression: "lhs.length != rhs.length"
      range: "(567,13)-(567,36)"
      evaluatedAs: true
  - testPathName: "append7WhenIsEquals"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "append(double1,double2):equalsBuilder2"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "double"
            uuid: "double1"
      valueType: "double[]"
      uuid: "lhs"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "double"
            uuid: "double2"
      valueType: "double[]"
      uuid: "rhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "equalsBuilder2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "double"
      uuid: "double1"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "double"
      uuid: "double2"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 557
      expression: "!isEquals"
      range: "(557,13)-(557,21)"
      evaluatedAs: false
    - lineNumber: 560
      expression: "lhs == rhs"
      range: "(560,13)-(560,22)"
      evaluatedAs: false
    - lineNumber: 563
      expression: "lhs == null"
      range: "(563,13)-(563,23)"
      evaluatedAs: false
    - lineNumber: 563
      expression: "rhs == null"
      range: "(563,28)-(563,38)"
      evaluatedAs: false
    - lineNumber: 567
      expression: "lhs.length != rhs.length"
      range: "(567,13)-(567,36)"
      evaluatedAs: false
    - lineNumber: 571
      expression: "i < lhs.length"
      range: "(571,25)-(571,38)"
      evaluatedAs: true
    - lineNumber: 571
      expression: "isEquals"
      range: "(571,43)-(571,50)"
      evaluatedAs: true
- method:
    name: "append"
    sourceCodeSignature: "EqualsBuilder append(final float lhs, final float rhs)"
    returnType: "org.apache.commons.lang3.builder.EqualsBuilder"
    parameters:
    - name: "lhs"
      type: "float"
    - name: "rhs"
      type: "float"
    instructionFingerprint: "D19F14C803C48C0BEF860244F91EBCA7"
  paths:
  - testPathName: "append8WhenIsEquals"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "append(int2,int3):equalsBuilder2"
    - type: "RESULT"
      name: "result"
      valueUuid: "equalsBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1.0
      valueType: "float"
      uuid: "lhs"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0.5
      valueType: "float"
      uuid: "rhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "equalsBuilder2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1065353216
      valueType: "int"
      uuid: "int2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1056964608
      valueType: "int"
      uuid: "int3"
    branches:
    - lineNumber: 591
      expression: "!isEquals"
      range: "(591,13)-(591,21)"
      evaluatedAs: false
- method:
    name: "append"
    sourceCodeSignature: "EqualsBuilder append(final float[] lhs, final float[] rhs)"
    returnType: "org.apache.commons.lang3.builder.EqualsBuilder"
    parameters:
    - name: "lhs"
      type: "float[]"
    - name: "rhs"
      type: "float[]"
    instructionFingerprint: "C8D139C3B0E9ECD61AC941520CB8EAD8"
  paths:
  - testPathName: "append9WhenLhsEqualsRhs"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "lhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "float[]"
      uuid: "lhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 608
      expression: "!isEquals"
      range: "(608,13)-(608,21)"
      evaluatedAs: false
    - lineNumber: 611
      expression: "lhs == rhs"
      range: "(611,13)-(611,22)"
      evaluatedAs: true
  - testPathName: "append9WhenRhsIsNull"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "float[]"
      uuid: "lhs"
    - sapientType: "NULL"
      valueType: "float[]"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 608
      expression: "!isEquals"
      range: "(608,13)-(608,21)"
      evaluatedAs: false
    - lineNumber: 611
      expression: "lhs == rhs"
      range: "(611,13)-(611,22)"
      evaluatedAs: false
    - lineNumber: 614
      expression: "lhs == null"
      range: "(614,13)-(614,23)"
      evaluatedAs: false
    - lineNumber: 614
      expression: "rhs == null"
      range: "(614,28)-(614,38)"
      evaluatedAs: true
  - testPathName: "append9WhenLhsLengthNotEqualsRhsLength"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "float"
            uuid: "lhsItem0"
      valueType: "float[]"
      uuid: "lhs"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "float[]"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 608
      expression: "!isEquals"
      range: "(608,13)-(608,21)"
      evaluatedAs: false
    - lineNumber: 611
      expression: "lhs == rhs"
      range: "(611,13)-(611,22)"
      evaluatedAs: false
    - lineNumber: 614
      expression: "lhs == null"
      range: "(614,13)-(614,23)"
      evaluatedAs: false
    - lineNumber: 614
      expression: "rhs == null"
      range: "(614,28)-(614,38)"
      evaluatedAs: false
    - lineNumber: 618
      expression: "lhs.length != rhs.length"
      range: "(618,13)-(618,36)"
      evaluatedAs: true
  - testPathName: "append9WhenIsEquals"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "append(float1,float2):equalsBuilder2"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "float"
            uuid: "float1"
      valueType: "float[]"
      uuid: "lhs"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "float"
            uuid: "float2"
      valueType: "float[]"
      uuid: "rhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "equalsBuilder2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "float"
      uuid: "float1"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "float"
      uuid: "float2"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 608
      expression: "!isEquals"
      range: "(608,13)-(608,21)"
      evaluatedAs: false
    - lineNumber: 611
      expression: "lhs == rhs"
      range: "(611,13)-(611,22)"
      evaluatedAs: false
    - lineNumber: 614
      expression: "lhs == null"
      range: "(614,13)-(614,23)"
      evaluatedAs: false
    - lineNumber: 614
      expression: "rhs == null"
      range: "(614,28)-(614,38)"
      evaluatedAs: false
    - lineNumber: 618
      expression: "lhs.length != rhs.length"
      range: "(618,13)-(618,36)"
      evaluatedAs: false
    - lineNumber: 622
      expression: "i < lhs.length"
      range: "(622,25)-(622,38)"
      evaluatedAs: true
    - lineNumber: 622
      expression: "isEquals"
      range: "(622,43)-(622,50)"
      evaluatedAs: true
- method:
    name: "append"
    sourceCodeSignature: "EqualsBuilder append(final int lhs, final int rhs)"
    returnType: "org.apache.commons.lang3.builder.EqualsBuilder"
    parameters:
    - name: "lhs"
      type: "int"
    - name: "rhs"
      type: "int"
    instructionFingerprint: "D91BFADD854DA2E8289DC632D73C09B3"
  paths:
  - testPathName: "append10WhenLhsEqualsRhs"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "lhs"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 636
      expression: "!isEquals"
      range: "(636,13)-(636,21)"
      evaluatedAs: false
    - lineNumber: 639
      expression: "lhs == rhs"
      range: "(639,20)-(639,29)"
      evaluatedAs: true
  - testPathName: "append10WhenLhsNotEqualsRhs"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "lhs"
    - sapientType: "BASIC"
      content: !<regular>
        value: 2
      valueType: "int"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 636
      expression: "!isEquals"
      range: "(636,13)-(636,21)"
      evaluatedAs: false
    - lineNumber: 639
      expression: "lhs == rhs"
      range: "(639,20)-(639,29)"
      evaluatedAs: false
- method:
    name: "append"
    sourceCodeSignature: "EqualsBuilder append(final int[] lhs, final int[] rhs)"
    returnType: "org.apache.commons.lang3.builder.EqualsBuilder"
    parameters:
    - name: "lhs"
      type: "int[]"
    - name: "rhs"
      type: "int[]"
    instructionFingerprint: "F41959388666867621144B8F6D6B4174"
  paths:
  - testPathName: "append11WhenLhsEqualsRhs"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "lhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "int[]"
      uuid: "lhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 654
      expression: "!isEquals"
      range: "(654,13)-(654,21)"
      evaluatedAs: false
    - lineNumber: 657
      expression: "lhs == rhs"
      range: "(657,13)-(657,22)"
      evaluatedAs: true
  - testPathName: "append11WhenRhsIsNull"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "int[]"
      uuid: "lhs"
    - sapientType: "NULL"
      valueType: "int[]"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 654
      expression: "!isEquals"
      range: "(654,13)-(654,21)"
      evaluatedAs: false
    - lineNumber: 657
      expression: "lhs == rhs"
      range: "(657,13)-(657,22)"
      evaluatedAs: false
    - lineNumber: 660
      expression: "lhs == null"
      range: "(660,13)-(660,23)"
      evaluatedAs: false
    - lineNumber: 660
      expression: "rhs == null"
      range: "(660,28)-(660,38)"
      evaluatedAs: true
  - testPathName: "append11WhenLhsLengthNotEqualsRhsLength"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "lhsItem0"
      valueType: "int[]"
      uuid: "lhs"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "int[]"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 654
      expression: "!isEquals"
      range: "(654,13)-(654,21)"
      evaluatedAs: false
    - lineNumber: 657
      expression: "lhs == rhs"
      range: "(657,13)-(657,22)"
      evaluatedAs: false
    - lineNumber: 660
      expression: "lhs == null"
      range: "(660,13)-(660,23)"
      evaluatedAs: false
    - lineNumber: 660
      expression: "rhs == null"
      range: "(660,28)-(660,38)"
      evaluatedAs: false
    - lineNumber: 664
      expression: "lhs.length != rhs.length"
      range: "(664,13)-(664,36)"
      evaluatedAs: true
  - testPathName: "append11WhenIsEquals"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "append(int6,int7):equalsBuilder2"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "int6"
      valueType: "int[]"
      uuid: "lhs"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "int7"
      valueType: "int[]"
      uuid: "rhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "equalsBuilder2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int6"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int7"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 654
      expression: "!isEquals"
      range: "(654,13)-(654,21)"
      evaluatedAs: false
    - lineNumber: 657
      expression: "lhs == rhs"
      range: "(657,13)-(657,22)"
      evaluatedAs: false
    - lineNumber: 660
      expression: "lhs == null"
      range: "(660,13)-(660,23)"
      evaluatedAs: false
    - lineNumber: 660
      expression: "rhs == null"
      range: "(660,28)-(660,38)"
      evaluatedAs: false
    - lineNumber: 664
      expression: "lhs.length != rhs.length"
      range: "(664,13)-(664,36)"
      evaluatedAs: false
    - lineNumber: 668
      expression: "i < lhs.length"
      range: "(668,25)-(668,38)"
      evaluatedAs: true
    - lineNumber: 668
      expression: "isEquals"
      range: "(668,43)-(668,50)"
      evaluatedAs: true
- method:
    name: "append"
    sourceCodeSignature: "EqualsBuilder append(final long lhs, final long rhs)"
    returnType: "org.apache.commons.lang3.builder.EqualsBuilder"
    parameters:
    - name: "lhs"
      type: "long"
    - name: "rhs"
      type: "long"
    instructionFingerprint: "7CFFD8F1C4874702BE39F07FE03299DD"
  paths:
  - testPathName: "append12WhenLhsEqualsRhs"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "long"
      uuid: "lhs"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "long"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 684
      expression: "!isEquals"
      range: "(684,13)-(684,21)"
      evaluatedAs: false
    - lineNumber: 687
      expression: "lhs == rhs"
      range: "(687,20)-(687,29)"
      evaluatedAs: true
  - testPathName: "append12WhenLhsNotEqualsRhs"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "long"
      uuid: "lhs"
    - sapientType: "BASIC"
      content: !<regular>
        value: 2
      valueType: "long"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 684
      expression: "!isEquals"
      range: "(684,13)-(684,21)"
      evaluatedAs: false
    - lineNumber: 687
      expression: "lhs == rhs"
      range: "(687,20)-(687,29)"
      evaluatedAs: false
- method:
    name: "append"
    sourceCodeSignature: "EqualsBuilder append(final long[] lhs, final long[] rhs)"
    returnType: "org.apache.commons.lang3.builder.EqualsBuilder"
    parameters:
    - name: "lhs"
      type: "long[]"
    - name: "rhs"
      type: "long[]"
    instructionFingerprint: "DF22B93F6CA0FAE68164F6640D55E694"
  paths:
  - testPathName: "append13WhenLhsEqualsRhs"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "lhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "long[]"
      uuid: "lhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 702
      expression: "!isEquals"
      range: "(702,13)-(702,21)"
      evaluatedAs: false
    - lineNumber: 705
      expression: "lhs == rhs"
      range: "(705,13)-(705,22)"
      evaluatedAs: true
  - testPathName: "append13WhenRhsIsNull"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "long[]"
      uuid: "lhs"
    - sapientType: "NULL"
      valueType: "long[]"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 702
      expression: "!isEquals"
      range: "(702,13)-(702,21)"
      evaluatedAs: false
    - lineNumber: 705
      expression: "lhs == rhs"
      range: "(705,13)-(705,22)"
      evaluatedAs: false
    - lineNumber: 708
      expression: "lhs == null"
      range: "(708,13)-(708,23)"
      evaluatedAs: false
    - lineNumber: 708
      expression: "rhs == null"
      range: "(708,28)-(708,38)"
      evaluatedAs: true
  - testPathName: "append13WhenLhsLengthNotEqualsRhsLength"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "lhsItem0"
      valueType: "long[]"
      uuid: "lhs"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "long[]"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 702
      expression: "!isEquals"
      range: "(702,13)-(702,21)"
      evaluatedAs: false
    - lineNumber: 705
      expression: "lhs == rhs"
      range: "(705,13)-(705,22)"
      evaluatedAs: false
    - lineNumber: 708
      expression: "lhs == null"
      range: "(708,13)-(708,23)"
      evaluatedAs: false
    - lineNumber: 708
      expression: "rhs == null"
      range: "(708,28)-(708,38)"
      evaluatedAs: false
    - lineNumber: 712
      expression: "lhs.length != rhs.length"
      range: "(712,13)-(712,36)"
      evaluatedAs: true
  - testPathName: "append13WhenIsEquals"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "append(long1,long2):equalsBuilder2"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "long1"
      valueType: "long[]"
      uuid: "lhs"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "long2"
      valueType: "long[]"
      uuid: "rhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "equalsBuilder2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "long"
      uuid: "long1"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "long"
      uuid: "long2"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 702
      expression: "!isEquals"
      range: "(702,13)-(702,21)"
      evaluatedAs: false
    - lineNumber: 705
      expression: "lhs == rhs"
      range: "(705,13)-(705,22)"
      evaluatedAs: false
    - lineNumber: 708
      expression: "lhs == null"
      range: "(708,13)-(708,23)"
      evaluatedAs: false
    - lineNumber: 708
      expression: "rhs == null"
      range: "(708,28)-(708,38)"
      evaluatedAs: false
    - lineNumber: 712
      expression: "lhs.length != rhs.length"
      range: "(712,13)-(712,36)"
      evaluatedAs: false
    - lineNumber: 716
      expression: "i < lhs.length"
      range: "(716,25)-(716,38)"
      evaluatedAs: true
    - lineNumber: 716
      expression: "isEquals"
      range: "(716,43)-(716,50)"
      evaluatedAs: true
- method:
    name: "append"
    sourceCodeSignature: "EqualsBuilder append(final Object lhs, final Object rhs)"
    returnType: "org.apache.commons.lang3.builder.EqualsBuilder"
    parameters:
    - name: "lhs"
      type: "java.lang.Object"
    - name: "rhs"
      type: "java.lang.Object"
    instructionFingerprint: "252281417C07490710B6F6D3653FD826"
  paths:
  - testPathName: "append14WhenLhsEqualsRhs"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "lhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "lhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 734
      expression: "!isEquals"
      range: "(734,13)-(734,21)"
      evaluatedAs: false
    - lineNumber: 737
      expression: "lhs == rhs"
      range: "(737,13)-(737,22)"
      evaluatedAs: true
  - testPathName: "append14WhenRhsIsNull"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "lhs"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 734
      expression: "!isEquals"
      range: "(734,13)-(734,21)"
      evaluatedAs: false
    - lineNumber: 737
      expression: "lhs == rhs"
      range: "(737,13)-(737,22)"
      evaluatedAs: false
    - lineNumber: 740
      expression: "lhs == null"
      range: "(740,13)-(740,23)"
      evaluatedAs: false
    - lineNumber: 740
      expression: "rhs == null"
      range: "(740,28)-(740,38)"
      evaluatedAs: true
  - testPathName: "append14WhenLhsGetClassNotEqualsRhsGetClass"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isArray() : boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "lhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 734
      expression: "!isEquals"
      range: "(734,13)-(734,21)"
      evaluatedAs: false
    - lineNumber: 737
      expression: "lhs == rhs"
      range: "(737,13)-(737,22)"
      evaluatedAs: false
    - lineNumber: 740
      expression: "lhs == null"
      range: "(740,13)-(740,23)"
      evaluatedAs: false
    - lineNumber: 740
      expression: "rhs == null"
      range: "(740,28)-(740,38)"
      evaluatedAs: false
    - lineNumber: 745
      expression: "lhsClass.isArray()"
      range: "(745,13)-(745,30)"
      evaluatedAs: true
    - lineNumber: 848
      expression: "lhs.getClass() != rhs.getClass()"
      range: "(848,13)-(848,44)"
      evaluatedAs: true
      internalMethodName: "appendArray"
  - testPathName: "append14WhenNotTestRecursive"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isArray() : boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "lhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 734
      expression: "!isEquals"
      range: "(734,13)-(734,21)"
      evaluatedAs: false
    - lineNumber: 737
      expression: "lhs == rhs"
      range: "(737,13)-(737,22)"
      evaluatedAs: false
    - lineNumber: 740
      expression: "lhs == null"
      range: "(740,13)-(740,23)"
      evaluatedAs: false
    - lineNumber: 740
      expression: "rhs == null"
      range: "(740,28)-(740,38)"
      evaluatedAs: false
    - lineNumber: 745
      expression: "lhsClass.isArray()"
      range: "(745,13)-(745,30)"
      evaluatedAs: false
    - lineNumber: 750
      expression: "testRecursive"
      range: "(750,13)-(750,25)"
      evaluatedAs: false
  - testPathName: "append14WhenLhsInstanceOfLongArray"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "append(lhs,rhs):equalsBuilder2"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isArray() : boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "long[]"
      uuid: "lhs"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "long[]"
      uuid: "rhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "equalsBuilder2"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 734
      expression: "!isEquals"
      range: "(734,13)-(734,21)"
      evaluatedAs: false
    - lineNumber: 737
      expression: "lhs == rhs"
      range: "(737,13)-(737,22)"
      evaluatedAs: false
    - lineNumber: 740
      expression: "lhs == null"
      range: "(740,13)-(740,23)"
      evaluatedAs: false
    - lineNumber: 740
      expression: "rhs == null"
      range: "(740,28)-(740,38)"
      evaluatedAs: false
    - lineNumber: 745
      expression: "lhsClass.isArray()"
      range: "(745,13)-(745,30)"
      evaluatedAs: true
    - lineNumber: 848
      expression: "lhs.getClass() != rhs.getClass()"
      range: "(848,13)-(848,44)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 850
      expression: "lhs instanceof long[]"
      range: "(850,20)-(850,40)"
      evaluatedAs: true
      internalMethodName: "appendArray"
  - testPathName: "append14WhenLhsInstanceOfIntArray"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "append(lhs,rhs):equalsBuilder2"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isArray() : boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "int[]"
      uuid: "lhs"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "int[]"
      uuid: "rhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "equalsBuilder2"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 734
      expression: "!isEquals"
      range: "(734,13)-(734,21)"
      evaluatedAs: false
    - lineNumber: 737
      expression: "lhs == rhs"
      range: "(737,13)-(737,22)"
      evaluatedAs: false
    - lineNumber: 740
      expression: "lhs == null"
      range: "(740,13)-(740,23)"
      evaluatedAs: false
    - lineNumber: 740
      expression: "rhs == null"
      range: "(740,28)-(740,38)"
      evaluatedAs: false
    - lineNumber: 745
      expression: "lhsClass.isArray()"
      range: "(745,13)-(745,30)"
      evaluatedAs: true
    - lineNumber: 848
      expression: "lhs.getClass() != rhs.getClass()"
      range: "(848,13)-(848,44)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 850
      expression: "lhs instanceof long[]"
      range: "(850,20)-(850,40)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 852
      expression: "lhs instanceof int[]"
      range: "(852,20)-(852,39)"
      evaluatedAs: true
      internalMethodName: "appendArray"
  - testPathName: "append14WhenLhsInstanceOfShortArray"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isArray() : boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "short[]"
      uuid: "lhs"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "short[]"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 734
      expression: "!isEquals"
      range: "(734,13)-(734,21)"
      evaluatedAs: false
    - lineNumber: 737
      expression: "lhs == rhs"
      range: "(737,13)-(737,22)"
      evaluatedAs: false
    - lineNumber: 740
      expression: "lhs == null"
      range: "(740,13)-(740,23)"
      evaluatedAs: false
    - lineNumber: 740
      expression: "rhs == null"
      range: "(740,28)-(740,38)"
      evaluatedAs: false
    - lineNumber: 745
      expression: "lhsClass.isArray()"
      range: "(745,13)-(745,30)"
      evaluatedAs: true
    - lineNumber: 848
      expression: "lhs.getClass() != rhs.getClass()"
      range: "(848,13)-(848,44)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 850
      expression: "lhs instanceof long[]"
      range: "(850,20)-(850,40)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 852
      expression: "lhs instanceof int[]"
      range: "(852,20)-(852,39)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 854
      expression: "lhs instanceof short[]"
      range: "(854,20)-(854,41)"
      evaluatedAs: true
      internalMethodName: "appendArray"
  - testPathName: "append14WhenLhsInstanceOfCharArray"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "append(lhs,rhs):equalsBuilder2"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isArray() : boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "char[]"
      uuid: "lhs"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "char[]"
      uuid: "rhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "equalsBuilder2"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 734
      expression: "!isEquals"
      range: "(734,13)-(734,21)"
      evaluatedAs: false
    - lineNumber: 737
      expression: "lhs == rhs"
      range: "(737,13)-(737,22)"
      evaluatedAs: false
    - lineNumber: 740
      expression: "lhs == null"
      range: "(740,13)-(740,23)"
      evaluatedAs: false
    - lineNumber: 740
      expression: "rhs == null"
      range: "(740,28)-(740,38)"
      evaluatedAs: false
    - lineNumber: 745
      expression: "lhsClass.isArray()"
      range: "(745,13)-(745,30)"
      evaluatedAs: true
    - lineNumber: 848
      expression: "lhs.getClass() != rhs.getClass()"
      range: "(848,13)-(848,44)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 850
      expression: "lhs instanceof long[]"
      range: "(850,20)-(850,40)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 852
      expression: "lhs instanceof int[]"
      range: "(852,20)-(852,39)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 854
      expression: "lhs instanceof short[]"
      range: "(854,20)-(854,41)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 856
      expression: "lhs instanceof char[]"
      range: "(856,20)-(856,40)"
      evaluatedAs: true
      internalMethodName: "appendArray"
  - testPathName: "append14WhenLhsInstanceOfByteArray"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "append(lhs,rhs):equalsBuilder2"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isArray() : boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "lhs"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "rhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "equalsBuilder2"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 734
      expression: "!isEquals"
      range: "(734,13)-(734,21)"
      evaluatedAs: false
    - lineNumber: 737
      expression: "lhs == rhs"
      range: "(737,13)-(737,22)"
      evaluatedAs: false
    - lineNumber: 740
      expression: "lhs == null"
      range: "(740,13)-(740,23)"
      evaluatedAs: false
    - lineNumber: 740
      expression: "rhs == null"
      range: "(740,28)-(740,38)"
      evaluatedAs: false
    - lineNumber: 745
      expression: "lhsClass.isArray()"
      range: "(745,13)-(745,30)"
      evaluatedAs: true
    - lineNumber: 848
      expression: "lhs.getClass() != rhs.getClass()"
      range: "(848,13)-(848,44)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 850
      expression: "lhs instanceof long[]"
      range: "(850,20)-(850,40)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 852
      expression: "lhs instanceof int[]"
      range: "(852,20)-(852,39)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 854
      expression: "lhs instanceof short[]"
      range: "(854,20)-(854,41)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 856
      expression: "lhs instanceof char[]"
      range: "(856,20)-(856,40)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 858
      expression: "lhs instanceof byte[]"
      range: "(858,20)-(858,40)"
      evaluatedAs: true
      internalMethodName: "appendArray"
  - testPathName: "append14WhenLhsInstanceOfDoubleArray"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "append(lhs,rhs):equalsBuilder2"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isArray() : boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "double[]"
      uuid: "lhs"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "double[]"
      uuid: "rhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "equalsBuilder2"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 734
      expression: "!isEquals"
      range: "(734,13)-(734,21)"
      evaluatedAs: false
    - lineNumber: 737
      expression: "lhs == rhs"
      range: "(737,13)-(737,22)"
      evaluatedAs: false
    - lineNumber: 740
      expression: "lhs == null"
      range: "(740,13)-(740,23)"
      evaluatedAs: false
    - lineNumber: 740
      expression: "rhs == null"
      range: "(740,28)-(740,38)"
      evaluatedAs: false
    - lineNumber: 745
      expression: "lhsClass.isArray()"
      range: "(745,13)-(745,30)"
      evaluatedAs: true
    - lineNumber: 848
      expression: "lhs.getClass() != rhs.getClass()"
      range: "(848,13)-(848,44)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 850
      expression: "lhs instanceof long[]"
      range: "(850,20)-(850,40)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 852
      expression: "lhs instanceof int[]"
      range: "(852,20)-(852,39)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 854
      expression: "lhs instanceof short[]"
      range: "(854,20)-(854,41)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 856
      expression: "lhs instanceof char[]"
      range: "(856,20)-(856,40)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 858
      expression: "lhs instanceof byte[]"
      range: "(858,20)-(858,40)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 860
      expression: "lhs instanceof double[]"
      range: "(860,20)-(860,42)"
      evaluatedAs: true
      internalMethodName: "appendArray"
  - testPathName: "append14WhenLhsInstanceOfFloatArray"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "append(lhs,rhs):equalsBuilder2"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isArray() : boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "float[]"
      uuid: "lhs"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "float[]"
      uuid: "rhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "equalsBuilder2"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 734
      expression: "!isEquals"
      range: "(734,13)-(734,21)"
      evaluatedAs: false
    - lineNumber: 737
      expression: "lhs == rhs"
      range: "(737,13)-(737,22)"
      evaluatedAs: false
    - lineNumber: 740
      expression: "lhs == null"
      range: "(740,13)-(740,23)"
      evaluatedAs: false
    - lineNumber: 740
      expression: "rhs == null"
      range: "(740,28)-(740,38)"
      evaluatedAs: false
    - lineNumber: 745
      expression: "lhsClass.isArray()"
      range: "(745,13)-(745,30)"
      evaluatedAs: true
    - lineNumber: 848
      expression: "lhs.getClass() != rhs.getClass()"
      range: "(848,13)-(848,44)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 850
      expression: "lhs instanceof long[]"
      range: "(850,20)-(850,40)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 852
      expression: "lhs instanceof int[]"
      range: "(852,20)-(852,39)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 854
      expression: "lhs instanceof short[]"
      range: "(854,20)-(854,41)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 856
      expression: "lhs instanceof char[]"
      range: "(856,20)-(856,40)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 858
      expression: "lhs instanceof byte[]"
      range: "(858,20)-(858,40)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 860
      expression: "lhs instanceof double[]"
      range: "(860,20)-(860,42)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 862
      expression: "lhs instanceof float[]"
      range: "(862,20)-(862,41)"
      evaluatedAs: true
      internalMethodName: "appendArray"
  - testPathName: "append14WhenLhsInstanceOfBooleanArray"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "append(lhs,rhs):equalsBuilder2"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isArray() : boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "boolean[]"
      uuid: "lhs"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "boolean[]"
      uuid: "rhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "equalsBuilder2"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 734
      expression: "!isEquals"
      range: "(734,13)-(734,21)"
      evaluatedAs: false
    - lineNumber: 737
      expression: "lhs == rhs"
      range: "(737,13)-(737,22)"
      evaluatedAs: false
    - lineNumber: 740
      expression: "lhs == null"
      range: "(740,13)-(740,23)"
      evaluatedAs: false
    - lineNumber: 740
      expression: "rhs == null"
      range: "(740,28)-(740,38)"
      evaluatedAs: false
    - lineNumber: 745
      expression: "lhsClass.isArray()"
      range: "(745,13)-(745,30)"
      evaluatedAs: true
    - lineNumber: 848
      expression: "lhs.getClass() != rhs.getClass()"
      range: "(848,13)-(848,44)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 850
      expression: "lhs instanceof long[]"
      range: "(850,20)-(850,40)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 852
      expression: "lhs instanceof int[]"
      range: "(852,20)-(852,39)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 854
      expression: "lhs instanceof short[]"
      range: "(854,20)-(854,41)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 856
      expression: "lhs instanceof char[]"
      range: "(856,20)-(856,40)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 858
      expression: "lhs instanceof byte[]"
      range: "(858,20)-(858,40)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 860
      expression: "lhs instanceof double[]"
      range: "(860,20)-(860,42)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 862
      expression: "lhs instanceof float[]"
      range: "(862,20)-(862,41)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 864
      expression: "lhs instanceof boolean[]"
      range: "(864,20)-(864,43)"
      evaluatedAs: true
      internalMethodName: "appendArray"
  - testPathName: "append14WhenLhsNotInstanceOfBooleanArray"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isArray() : boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Object[]"
      uuid: "lhs"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Object[]"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 734
      expression: "!isEquals"
      range: "(734,13)-(734,21)"
      evaluatedAs: false
    - lineNumber: 737
      expression: "lhs == rhs"
      range: "(737,13)-(737,22)"
      evaluatedAs: false
    - lineNumber: 740
      expression: "lhs == null"
      range: "(740,13)-(740,23)"
      evaluatedAs: false
    - lineNumber: 740
      expression: "rhs == null"
      range: "(740,28)-(740,38)"
      evaluatedAs: false
    - lineNumber: 745
      expression: "lhsClass.isArray()"
      range: "(745,13)-(745,30)"
      evaluatedAs: true
    - lineNumber: 848
      expression: "lhs.getClass() != rhs.getClass()"
      range: "(848,13)-(848,44)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 850
      expression: "lhs instanceof long[]"
      range: "(850,20)-(850,40)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 852
      expression: "lhs instanceof int[]"
      range: "(852,20)-(852,39)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 854
      expression: "lhs instanceof short[]"
      range: "(854,20)-(854,41)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 856
      expression: "lhs instanceof char[]"
      range: "(856,20)-(856,40)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 858
      expression: "lhs instanceof byte[]"
      range: "(858,20)-(858,40)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 860
      expression: "lhs instanceof double[]"
      range: "(860,20)-(860,42)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 862
      expression: "lhs instanceof float[]"
      range: "(862,20)-(862,41)"
      evaluatedAs: false
      internalMethodName: "appendArray"
    - lineNumber: 864
      expression: "lhs instanceof boolean[]"
      range: "(864,20)-(864,43)"
      evaluatedAs: false
      internalMethodName: "appendArray"
- method:
    name: "append"
    sourceCodeSignature: "EqualsBuilder append(final Object[] lhs, final Object[]\
      \ rhs)"
    returnType: "org.apache.commons.lang3.builder.EqualsBuilder"
    parameters:
    - name: "lhs"
      type: "java.lang.Object[]"
    - name: "rhs"
      type: "java.lang.Object[]"
    instructionFingerprint: "8F939EFFA99AD6CB4BD6CCC0F17CFD7E"
  paths:
  - testPathName: "append15WhenLhsEqualsRhs"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "lhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Object[]"
      uuid: "lhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 772
      expression: "!isEquals"
      range: "(772,13)-(772,21)"
      evaluatedAs: false
    - lineNumber: 775
      expression: "lhs == rhs"
      range: "(775,13)-(775,22)"
      evaluatedAs: true
  - testPathName: "append15WhenRhsIsNull"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Object[]"
      uuid: "lhs"
    - sapientType: "NULL"
      valueType: "java.lang.Object[]"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 772
      expression: "!isEquals"
      range: "(772,13)-(772,21)"
      evaluatedAs: false
    - lineNumber: 775
      expression: "lhs == rhs"
      range: "(775,13)-(775,22)"
      evaluatedAs: false
    - lineNumber: 778
      expression: "lhs == null"
      range: "(778,13)-(778,23)"
      evaluatedAs: false
    - lineNumber: 778
      expression: "rhs == null"
      range: "(778,28)-(778,38)"
      evaluatedAs: true
  - testPathName: "append15WhenLhsLengthNotEqualsRhsLength"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "lhsItem0"
      valueType: "java.lang.Object[]"
      uuid: "lhs"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Object[]"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 772
      expression: "!isEquals"
      range: "(772,13)-(772,21)"
      evaluatedAs: false
    - lineNumber: 775
      expression: "lhs == rhs"
      range: "(775,13)-(775,22)"
      evaluatedAs: false
    - lineNumber: 778
      expression: "lhs == null"
      range: "(778,13)-(778,23)"
      evaluatedAs: false
    - lineNumber: 778
      expression: "rhs == null"
      range: "(778,28)-(778,38)"
      evaluatedAs: false
    - lineNumber: 782
      expression: "lhs.length != rhs.length"
      range: "(782,13)-(782,36)"
      evaluatedAs: true
  - testPathName: "append15WhenIsEquals"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "append(object,object2):equalsBuilder2"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "object"
      valueType: "java.lang.Object[]"
      uuid: "lhs"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "object2"
      valueType: "java.lang.Object[]"
      uuid: "rhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "equalsBuilder2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 772
      expression: "!isEquals"
      range: "(772,13)-(772,21)"
      evaluatedAs: false
    - lineNumber: 775
      expression: "lhs == rhs"
      range: "(775,13)-(775,22)"
      evaluatedAs: false
    - lineNumber: 778
      expression: "lhs == null"
      range: "(778,13)-(778,23)"
      evaluatedAs: false
    - lineNumber: 778
      expression: "rhs == null"
      range: "(778,28)-(778,38)"
      evaluatedAs: false
    - lineNumber: 782
      expression: "lhs.length != rhs.length"
      range: "(782,13)-(782,36)"
      evaluatedAs: false
    - lineNumber: 786
      expression: "i < lhs.length"
      range: "(786,25)-(786,38)"
      evaluatedAs: true
    - lineNumber: 786
      expression: "isEquals"
      range: "(786,43)-(786,50)"
      evaluatedAs: true
- method:
    name: "append"
    sourceCodeSignature: "EqualsBuilder append(final short lhs, final short rhs)"
    returnType: "org.apache.commons.lang3.builder.EqualsBuilder"
    parameters:
    - name: "lhs"
      type: "short"
    - name: "rhs"
      type: "short"
    instructionFingerprint: "E6ECA850AD3E33205FD3FA6E6BFEC3BF"
  paths:
  - testPathName: "append16WhenLhsEqualsRhs"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "short"
      uuid: "lhs"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "short"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 800
      expression: "!isEquals"
      range: "(800,13)-(800,21)"
      evaluatedAs: false
    - lineNumber: 803
      expression: "lhs == rhs"
      range: "(803,20)-(803,29)"
      evaluatedAs: true
  - testPathName: "append16WhenLhsNotEqualsRhs"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "short"
      uuid: "lhs"
    - sapientType: "BASIC"
      content: !<regular>
        value: 2
      valueType: "short"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 800
      expression: "!isEquals"
      range: "(800,13)-(800,21)"
      evaluatedAs: false
    - lineNumber: 803
      expression: "lhs == rhs"
      range: "(803,20)-(803,29)"
      evaluatedAs: false
- method:
    name: "append"
    sourceCodeSignature: "EqualsBuilder append(final short[] lhs, final short[] rhs)"
    returnType: "org.apache.commons.lang3.builder.EqualsBuilder"
    parameters:
    - name: "lhs"
      type: "short[]"
    - name: "rhs"
      type: "short[]"
    instructionFingerprint: "EDF08789E54519F0311D9565A0896DDA"
  paths:
  - testPathName: "append17WhenLhsEqualsRhs"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "lhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "short[]"
      uuid: "lhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 818
      expression: "!isEquals"
      range: "(818,13)-(818,21)"
      evaluatedAs: false
    - lineNumber: 821
      expression: "lhs == rhs"
      range: "(821,13)-(821,22)"
      evaluatedAs: true
  - testPathName: "append17WhenRhsIsNull"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "short[]"
      uuid: "lhs"
    - sapientType: "NULL"
      valueType: "short[]"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 818
      expression: "!isEquals"
      range: "(818,13)-(818,21)"
      evaluatedAs: false
    - lineNumber: 821
      expression: "lhs == rhs"
      range: "(821,13)-(821,22)"
      evaluatedAs: false
    - lineNumber: 824
      expression: "lhs == null"
      range: "(824,13)-(824,23)"
      evaluatedAs: false
    - lineNumber: 824
      expression: "rhs == null"
      range: "(824,28)-(824,38)"
      evaluatedAs: true
  - testPathName: "append17WhenLhsLengthNotEqualsRhsLength"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "short"
            uuid: "lhsItem0"
      valueType: "short[]"
      uuid: "lhs"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "short[]"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 818
      expression: "!isEquals"
      range: "(818,13)-(818,21)"
      evaluatedAs: false
    - lineNumber: 821
      expression: "lhs == rhs"
      range: "(821,13)-(821,22)"
      evaluatedAs: false
    - lineNumber: 824
      expression: "lhs == null"
      range: "(824,13)-(824,23)"
      evaluatedAs: false
    - lineNumber: 824
      expression: "rhs == null"
      range: "(824,28)-(824,38)"
      evaluatedAs: false
    - lineNumber: 828
      expression: "lhs.length != rhs.length"
      range: "(828,13)-(828,36)"
      evaluatedAs: true
  - testPathName: "append17WhenIsEquals"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "append(short1,short2):equalsBuilder2"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "short"
            uuid: "short1"
      valueType: "short[]"
      uuid: "lhs"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "short"
            uuid: "short2"
      valueType: "short[]"
      uuid: "rhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "equalsBuilder2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "short"
      uuid: "short1"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "short"
      uuid: "short2"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 818
      expression: "!isEquals"
      range: "(818,13)-(818,21)"
      evaluatedAs: false
    - lineNumber: 821
      expression: "lhs == rhs"
      range: "(821,13)-(821,22)"
      evaluatedAs: false
    - lineNumber: 824
      expression: "lhs == null"
      range: "(824,13)-(824,23)"
      evaluatedAs: false
    - lineNumber: 824
      expression: "rhs == null"
      range: "(824,28)-(824,38)"
      evaluatedAs: false
    - lineNumber: 828
      expression: "lhs.length != rhs.length"
      range: "(828,13)-(828,36)"
      evaluatedAs: false
    - lineNumber: 832
      expression: "i < lhs.length"
      range: "(832,25)-(832,38)"
      evaluatedAs: true
    - lineNumber: 832
      expression: "isEquals"
      range: "(832,43)-(832,50)"
      evaluatedAs: true
- method:
    name: "appendSuper"
    sourceCodeSignature: "EqualsBuilder appendSuper(final boolean superEquals)"
    returnType: "org.apache.commons.lang3.builder.EqualsBuilder"
    parameters:
    - name: "superEquals"
      type: "boolean"
    instructionFingerprint: "62190A5C9CBC7DE5AEC4741B97494A39"
  paths:
  - testPathName: "appendSuperWhenIsEquals"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "superEquals"
      valueUuid: "superEquals"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "superEquals"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 880
      expression: "!isEquals"
      range: "(880,13)-(880,21)"
      evaluatedAs: false
- method:
    name: "build"
    sourceCodeSignature: "Boolean build()"
    returnType: "java.lang.Boolean"
    instructionFingerprint: "90DE5C5D59084B632C6127F2565BA1E9"
  paths:
  - testPathName: "buildTest"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "isEquals():boolean2"
    - type: "RESULT"
      name: "result"
      valueUuid: "boolean3"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "java.lang.Boolean"
      uuid: "boolean3"
- method:
    name: "reflectionAppend"
    sourceCodeSignature: "EqualsBuilder reflectionAppend(final Object lhs, final Object\
      \ rhs)"
    returnType: "org.apache.commons.lang3.builder.EqualsBuilder"
    parameters:
    - name: "lhs"
      type: "java.lang.Object"
    - name: "rhs"
      type: "java.lang.Object"
    instructionFingerprint: "29B8FA35A99AE95C5FECC5A1ECF72079"
  paths:
  - testPathName: "reflectionAppendWhenLhsEqualsRhs"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "lhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "lhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 939
      expression: "!isEquals"
      range: "(939,13)-(939,21)"
      evaluatedAs: false
    - lineNumber: 942
      expression: "lhs == rhs"
      range: "(942,13)-(942,22)"
      evaluatedAs: true
  - testPathName: "reflectionAppendWhenRhsIsNull"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "lhs"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 939
      expression: "!isEquals"
      range: "(939,13)-(939,21)"
      evaluatedAs: false
    - lineNumber: 942
      expression: "lhs == rhs"
      range: "(942,13)-(942,22)"
      evaluatedAs: false
    - lineNumber: 945
      expression: "lhs == null"
      range: "(945,13)-(945,23)"
      evaluatedAs: false
    - lineNumber: 945
      expression: "rhs == null"
      range: "(945,28)-(945,38)"
      evaluatedAs: true
  - testPathName: "reflectionAppendWhenTestClassIsArray"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "append(lhs,rhs):equalsBuilder2"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isInstance(java.lang.Object) :\
        \ boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "lhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "rhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "equalsBuilder2"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 939
      expression: "!isEquals"
      range: "(939,13)-(939,21)"
      evaluatedAs: false
    - lineNumber: 942
      expression: "lhs == rhs"
      range: "(942,13)-(942,22)"
      evaluatedAs: false
    - lineNumber: 945
      expression: "lhs == null"
      range: "(945,13)-(945,23)"
      evaluatedAs: false
    - lineNumber: 945
      expression: "rhs == null"
      range: "(945,28)-(945,38)"
      evaluatedAs: false
    - lineNumber: 957
      expression: "lhsClass.isInstance(rhs)"
      range: "(957,13)-(957,36)"
      evaluatedAs: true
    - lineNumber: 959
      expression: "!rhsClass.isInstance(lhs)"
      range: "(959,17)-(959,41)"
      evaluatedAs: true
    - lineNumber: 976
      expression: "testClass.isArray()"
      range: "(976,17)-(976,35)"
      evaluatedAs: true
  - testPathName: "reflectionAppendWhenCaughtIllegalArgumentException"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "append(lhs,rhs):equalsBuilder2"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isInstance(java.lang.Object) :\
        \ boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "lhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "rhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "equalsBuilder2"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 939
      expression: "!isEquals"
      range: "(939,13)-(939,21)"
      evaluatedAs: false
    - lineNumber: 942
      expression: "lhs == rhs"
      range: "(942,13)-(942,22)"
      evaluatedAs: false
    - lineNumber: 945
      expression: "lhs == null"
      range: "(945,13)-(945,23)"
      evaluatedAs: false
    - lineNumber: 945
      expression: "rhs == null"
      range: "(945,28)-(945,38)"
      evaluatedAs: false
    - lineNumber: 957
      expression: "lhsClass.isInstance(rhs)"
      range: "(957,13)-(957,36)"
      evaluatedAs: true
    - lineNumber: 959
      expression: "!rhsClass.isInstance(lhs)"
      range: "(959,17)-(959,41)"
      evaluatedAs: true
    - lineNumber: 976
      expression: "testClass.isArray()"
      range: "(976,17)-(976,35)"
      evaluatedAs: true
    - lineNumber: 989
      expression: "catch-exception (IllegalArgumentException)"
      range: "(989,11)-(989,49)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.IllegalArgumentException"
  - testPathName: "reflectionAppendWhenBypassReflectionClassesContainsRhsClass"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isInstance(java.lang.Object) :\
        \ boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "lhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "rhs"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 939
      expression: "!isEquals"
      range: "(939,13)-(939,21)"
      evaluatedAs: false
    - lineNumber: 942
      expression: "lhs == rhs"
      range: "(942,13)-(942,22)"
      evaluatedAs: false
    - lineNumber: 945
      expression: "lhs == null"
      range: "(945,13)-(945,23)"
      evaluatedAs: false
    - lineNumber: 945
      expression: "rhs == null"
      range: "(945,28)-(945,38)"
      evaluatedAs: false
    - lineNumber: 957
      expression: "lhsClass.isInstance(rhs)"
      range: "(957,13)-(957,36)"
      evaluatedAs: true
    - lineNumber: 959
      expression: "!rhsClass.isInstance(lhs)"
      range: "(959,17)-(959,41)"
      evaluatedAs: true
    - lineNumber: 976
      expression: "testClass.isArray()"
      range: "(976,17)-(976,35)"
      evaluatedAs: false
    - lineNumber: 979
      expression: "bypassReflectionClasses != null"
      range: "(979,17)-(979,47)"
      evaluatedAs: true
    - lineNumber: 980
      expression: "bypassReflectionClasses.contains(lhsClass)"
      range: "(980,25)-(980,66)"
      evaluatedAs: false
    - lineNumber: 980
      expression: "bypassReflectionClasses.contains(rhsClass)"
      range: "(980,71)-(980,112)"
      evaluatedAs: true
  - testPathName: "reflectionAppendWhenTestClassNotEqualsReflectUpToClass"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "STATIC"
      name: "EqualsBuilder.class"
      valueUuid: "EqualsBuilder.class"
      methodExercised:
        expression: "isRegistered(lhs,rhs):boolean7"
    - type: "STATIC"
      name: "EqualsBuilder.class"
      valueUuid: "EqualsBuilder.class"
      methodExercised:
        expression: "isRegistered(lhs,rhs):boolean8"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isInstance(java.lang.Object) :\
        \ boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "lhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "rhs"
    - sapientType: "MOCK"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "EqualsBuilder.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean7"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 939
      expression: "!isEquals"
      range: "(939,13)-(939,21)"
      evaluatedAs: false
    - lineNumber: 942
      expression: "lhs == rhs"
      range: "(942,13)-(942,22)"
      evaluatedAs: false
    - lineNumber: 945
      expression: "lhs == null"
      range: "(945,13)-(945,23)"
      evaluatedAs: false
    - lineNumber: 945
      expression: "rhs == null"
      range: "(945,28)-(945,38)"
      evaluatedAs: false
    - lineNumber: 957
      expression: "lhsClass.isInstance(rhs)"
      range: "(957,13)-(957,36)"
      evaluatedAs: true
    - lineNumber: 959
      expression: "!rhsClass.isInstance(lhs)"
      range: "(959,17)-(959,41)"
      evaluatedAs: true
    - lineNumber: 976
      expression: "testClass.isArray()"
      range: "(976,17)-(976,35)"
      evaluatedAs: false
    - lineNumber: 979
      expression: "bypassReflectionClasses != null"
      range: "(979,17)-(979,47)"
      evaluatedAs: true
    - lineNumber: 980
      expression: "bypassReflectionClasses.contains(lhsClass)"
      range: "(980,25)-(980,66)"
      evaluatedAs: false
    - lineNumber: 980
      expression: "bypassReflectionClasses.contains(rhsClass)"
      range: "(980,71)-(980,112)"
      evaluatedAs: false
    - lineNumber: 1013
      expression: "isRegistered(lhs, rhs)"
      range: "(1013,13)-(1013,34)"
      evaluatedAs: true
      internalMethodName: "reflectionAppend"
    - lineNumber: 984
      expression: "testClass.getSuperclass() != null"
      range: "(984,24)-(984,56)"
      evaluatedAs: true
    - lineNumber: 984
      expression: "testClass != reflectUpToClass"
      range: "(984,61)-(984,89)"
      evaluatedAs: true
  - testPathName: "reflectionAppendWhenTestClassNotEqualsReflectUpToClassAndCaughtIllegalArgumentException"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "STATIC"
      name: "EqualsBuilder.class"
      valueUuid: "EqualsBuilder.class"
      methodExercised:
        expression: "isRegistered(lhs,rhs):boolean7"
    - type: "STATIC"
      name: "EqualsBuilder.class"
      valueUuid: "EqualsBuilder.class"
      methodExercised:
        expression: "isRegistered(lhs,rhs):boolean8"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isInstance(java.lang.Object) :\
        \ boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "lhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "rhs"
    - sapientType: "MOCK"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "EqualsBuilder.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean7"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 939
      expression: "!isEquals"
      range: "(939,13)-(939,21)"
      evaluatedAs: false
    - lineNumber: 942
      expression: "lhs == rhs"
      range: "(942,13)-(942,22)"
      evaluatedAs: false
    - lineNumber: 945
      expression: "lhs == null"
      range: "(945,13)-(945,23)"
      evaluatedAs: false
    - lineNumber: 945
      expression: "rhs == null"
      range: "(945,28)-(945,38)"
      evaluatedAs: false
    - lineNumber: 957
      expression: "lhsClass.isInstance(rhs)"
      range: "(957,13)-(957,36)"
      evaluatedAs: true
    - lineNumber: 959
      expression: "!rhsClass.isInstance(lhs)"
      range: "(959,17)-(959,41)"
      evaluatedAs: true
    - lineNumber: 976
      expression: "testClass.isArray()"
      range: "(976,17)-(976,35)"
      evaluatedAs: false
    - lineNumber: 979
      expression: "bypassReflectionClasses != null"
      range: "(979,17)-(979,47)"
      evaluatedAs: true
    - lineNumber: 980
      expression: "bypassReflectionClasses.contains(lhsClass)"
      range: "(980,25)-(980,66)"
      evaluatedAs: false
    - lineNumber: 980
      expression: "bypassReflectionClasses.contains(rhsClass)"
      range: "(980,71)-(980,112)"
      evaluatedAs: false
    - lineNumber: 1013
      expression: "isRegistered(lhs, rhs)"
      range: "(1013,13)-(1013,34)"
      evaluatedAs: true
      internalMethodName: "reflectionAppend"
    - lineNumber: 984
      expression: "testClass.getSuperclass() != null"
      range: "(984,24)-(984,56)"
      evaluatedAs: true
    - lineNumber: 984
      expression: "testClass != reflectUpToClass"
      range: "(984,61)-(984,89)"
      evaluatedAs: true
    - lineNumber: 989
      expression: "catch-exception (IllegalArgumentException)"
      range: "(989,11)-(989,49)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.IllegalArgumentException"
  - testPathName: "reflectionAppendWhenRegistryIsEmptyAndTestClassGetSuperclassIsNotNullAndTestClassNotEqualsReflectUpToClass"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "STATIC"
      name: "EqualsBuilder.class"
      valueUuid: "EqualsBuilder.class"
      methodExercised:
        expression: "isRegistered(lhs,rhs):boolean8"
    - type: "STATIC"
      name: "EqualsBuilder.class"
      valueUuid: "EqualsBuilder.class"
      methodExercised:
        expression: "getRegisterPair(lhs,rhs):pair"
    - type: "STATIC"
      name: "EqualsBuilder.class"
      valueUuid: "EqualsBuilder.class"
      methodExercised:
        expression: "getRegisterPair(lhs,rhs):pair2"
    - type: "STATIC"
      name: "EqualsBuilder.class"
      valueUuid: "EqualsBuilder.class"
      methodExercised:
        expression: "isRegistered(lhs,rhs):boolean12"
    - type: "STATIC"
      name: "EqualsBuilder.class"
      valueUuid: "EqualsBuilder.class"
      methodExercised:
        expression: "getRegisterPair(lhs,rhs):pair3"
    - type: "STATIC"
      name: "EqualsBuilder.class"
      valueUuid: "EqualsBuilder.class"
      methodExercised:
        expression: "getRegisterPair(lhs,rhs):pair4"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isInstance(java.lang.Object) :\
        \ boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "lhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "rhs"
    - sapientType: "MOCK"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "EqualsBuilder.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.tuple.MutablePair"
        parameters: []
      valueType: "org.apache.commons.lang3.tuple.MutablePair"
      genericValueType: "org.apache.commons.lang3.builder.IDKey,org.apache.commons.lang3.builder.IDKey"
      uuid: "pair"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.tuple.MutablePair"
        parameters: []
      valueType: "org.apache.commons.lang3.tuple.MutablePair"
      genericValueType: "org.apache.commons.lang3.builder.IDKey,org.apache.commons.lang3.builder.IDKey"
      uuid: "pair2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean12"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.tuple.MutablePair"
        parameters: []
      valueType: "org.apache.commons.lang3.tuple.MutablePair"
      genericValueType: "org.apache.commons.lang3.builder.IDKey,org.apache.commons.lang3.builder.IDKey"
      uuid: "pair3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.tuple.MutablePair"
        parameters: []
      valueType: "org.apache.commons.lang3.tuple.MutablePair"
      genericValueType: "org.apache.commons.lang3.builder.IDKey,org.apache.commons.lang3.builder.IDKey"
      uuid: "pair4"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 939
      expression: "!isEquals"
      range: "(939,13)-(939,21)"
      evaluatedAs: false
    - lineNumber: 942
      expression: "lhs == rhs"
      range: "(942,13)-(942,22)"
      evaluatedAs: false
    - lineNumber: 945
      expression: "lhs == null"
      range: "(945,13)-(945,23)"
      evaluatedAs: false
    - lineNumber: 945
      expression: "rhs == null"
      range: "(945,28)-(945,38)"
      evaluatedAs: false
    - lineNumber: 957
      expression: "lhsClass.isInstance(rhs)"
      range: "(957,13)-(957,36)"
      evaluatedAs: false
    - lineNumber: 963
      expression: "rhsClass.isInstance(lhs)"
      range: "(963,20)-(963,43)"
      evaluatedAs: true
    - lineNumber: 965
      expression: "!lhsClass.isInstance(rhs)"
      range: "(965,17)-(965,41)"
      evaluatedAs: true
    - lineNumber: 976
      expression: "testClass.isArray()"
      range: "(976,17)-(976,35)"
      evaluatedAs: false
    - lineNumber: 979
      expression: "bypassReflectionClasses != null"
      range: "(979,17)-(979,47)"
      evaluatedAs: true
    - lineNumber: 980
      expression: "bypassReflectionClasses.contains(lhsClass)"
      range: "(980,25)-(980,66)"
      evaluatedAs: false
    - lineNumber: 980
      expression: "bypassReflectionClasses.contains(rhsClass)"
      range: "(980,71)-(980,112)"
      evaluatedAs: false
    - lineNumber: 1013
      expression: "isRegistered(lhs, rhs)"
      range: "(1013,13)-(1013,34)"
      evaluatedAs: false
      internalMethodName: "reflectionAppend"
    - lineNumber: 333
      expression: "registry == null"
      range: "(333,13)-(333,28)"
      evaluatedAs: true
      internalMethodName: "register"
    - lineNumber: 1021
      expression: "i < fields.length"
      range: "(1021,29)-(1021,45)"
      evaluatedAs: false
      internalMethodName: "reflectionAppend"
    - lineNumber: 352
      expression: "registry != null"
      range: "(352,13)-(352,28)"
      evaluatedAs: true
      internalMethodName: "unregister"
    - lineNumber: 354
      expression: "registry.isEmpty()"
      range: "(354,17)-(354,34)"
      evaluatedAs: true
      internalMethodName: "unregister"
    - lineNumber: 984
      expression: "testClass.getSuperclass() != null"
      range: "(984,24)-(984,56)"
      evaluatedAs: true
    - lineNumber: 984
      expression: "testClass != reflectUpToClass"
      range: "(984,61)-(984,89)"
      evaluatedAs: true
    mockedStaticClassesWithCallRealMethods:
    - "org.apache.commons.lang3.builder.EqualsBuilder"
  - testPathName: "reflectionAppendWhenFieldNotIsAnnotationPresentEqualsExcludeAndRegistryIsNotNullAndRegistryIsEmptyAndTestClassGetSuperc"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "append(object2,object3):equalsBuilder2"
    - type: "STATIC"
      name: "EqualsBuilder.class"
      valueUuid: "EqualsBuilder.class"
      methodExercised:
        expression: "isRegistered(lhs,rhs):boolean7"
    - type: "STATIC"
      name: "EqualsBuilder.class"
      valueUuid: "EqualsBuilder.class"
      methodExercised:
        expression: "getRegisterPair(lhs,rhs):pair"
    - type: "STATIC"
      name: "EqualsBuilder.class"
      valueUuid: "EqualsBuilder.class"
      methodExercised:
        expression: "getRegisterPair(lhs,rhs):pair2"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isInstance(java.lang.Object) :\
        \ boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "lhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "rhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "equalsBuilder2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object3"
    - sapientType: "MOCK"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "EqualsBuilder.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean7"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.tuple.MutablePair"
        parameters: []
      valueType: "org.apache.commons.lang3.tuple.MutablePair"
      genericValueType: "org.apache.commons.lang3.builder.IDKey,org.apache.commons.lang3.builder.IDKey"
      uuid: "pair"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.tuple.MutablePair"
        parameters: []
      valueType: "org.apache.commons.lang3.tuple.MutablePair"
      genericValueType: "org.apache.commons.lang3.builder.IDKey,org.apache.commons.lang3.builder.IDKey"
      uuid: "pair2"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 939
      expression: "!isEquals"
      range: "(939,13)-(939,21)"
      evaluatedAs: false
    - lineNumber: 942
      expression: "lhs == rhs"
      range: "(942,13)-(942,22)"
      evaluatedAs: false
    - lineNumber: 945
      expression: "lhs == null"
      range: "(945,13)-(945,23)"
      evaluatedAs: false
    - lineNumber: 945
      expression: "rhs == null"
      range: "(945,28)-(945,38)"
      evaluatedAs: false
    - lineNumber: 957
      expression: "lhsClass.isInstance(rhs)"
      range: "(957,13)-(957,36)"
      evaluatedAs: true
    - lineNumber: 959
      expression: "!rhsClass.isInstance(lhs)"
      range: "(959,17)-(959,41)"
      evaluatedAs: true
    - lineNumber: 976
      expression: "testClass.isArray()"
      range: "(976,17)-(976,35)"
      evaluatedAs: false
    - lineNumber: 979
      expression: "bypassReflectionClasses != null"
      range: "(979,17)-(979,47)"
      evaluatedAs: true
    - lineNumber: 980
      expression: "bypassReflectionClasses.contains(lhsClass)"
      range: "(980,25)-(980,66)"
      evaluatedAs: false
    - lineNumber: 980
      expression: "bypassReflectionClasses.contains(rhsClass)"
      range: "(980,71)-(980,112)"
      evaluatedAs: false
    - lineNumber: 1013
      expression: "isRegistered(lhs, rhs)"
      range: "(1013,13)-(1013,34)"
      evaluatedAs: false
      internalMethodName: "reflectionAppend"
    - lineNumber: 333
      expression: "registry == null"
      range: "(333,13)-(333,28)"
      evaluatedAs: true
      internalMethodName: "register"
    - lineNumber: 1021
      expression: "i < fields.length"
      range: "(1021,29)-(1021,45)"
      evaluatedAs: true
      internalMethodName: "reflectionAppend"
    - lineNumber: 1021
      expression: "isEquals"
      range: "(1021,50)-(1021,57)"
      evaluatedAs: true
      internalMethodName: "reflectionAppend"
    - lineNumber: 1023
      expression: "!ArrayUtils.contains(excludeFields, field.getName())"
      range: "(1023,21)-(1023,72)"
      evaluatedAs: true
      internalMethodName: "reflectionAppend"
    - lineNumber: 1024
      expression: "!field.getName().contains(\\\"$\\\")"
      range: "(1024,24)-(1024,53)"
      evaluatedAs: true
      internalMethodName: "reflectionAppend"
    - lineNumber: 1025
      expression: "testTransients"
      range: "(1025,25)-(1025,38)"
      evaluatedAs: false
      internalMethodName: "reflectionAppend"
    - lineNumber: 1026
      expression: "!Modifier.isStatic(field.getModifiers())"
      range: "(1026,24)-(1026,63)"
      evaluatedAs: true
      internalMethodName: "reflectionAppend"
    - lineNumber: 1027
      expression: "!field.isAnnotationPresent(EqualsExclude.class)"
      range: "(1027,24)-(1027,70)"
      evaluatedAs: true
      internalMethodName: "reflectionAppend"
    - lineNumber: 352
      expression: "registry != null"
      range: "(352,13)-(352,28)"
      evaluatedAs: true
      internalMethodName: "unregister"
    - lineNumber: 354
      expression: "registry.isEmpty()"
      range: "(354,17)-(354,34)"
      evaluatedAs: true
      internalMethodName: "unregister"
    - lineNumber: 984
      expression: "testClass.getSuperclass() != null"
      range: "(984,24)-(984,56)"
      evaluatedAs: false
    mockedStaticClassesWithCallRealMethods:
    - "org.apache.commons.lang3.builder.EqualsBuilder"
  - testPathName: "reflectionAppendWhenRegistryIsNotNullAndRegistryIsEmpty"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "lhs"
      valueUuid: "lhs"
    - type: "INPUT"
      name: "rhs"
      valueUuid: "rhs"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "append(object2,object3):equalsBuilder2"
    - type: "STATIC"
      name: "EqualsBuilder.class"
      valueUuid: "EqualsBuilder.class"
      methodExercised:
        expression: "isRegistered(lhs,rhs):boolean7"
    - type: "STATIC"
      name: "EqualsBuilder.class"
      valueUuid: "EqualsBuilder.class"
      methodExercised:
        expression: "isRegistered(lhs,rhs):boolean8"
    - type: "STATIC"
      name: "EqualsBuilder.class"
      valueUuid: "EqualsBuilder.class"
      methodExercised:
        expression: "getRegisterPair(lhs,rhs):pair"
    - type: "STATIC"
      name: "EqualsBuilder.class"
      valueUuid: "EqualsBuilder.class"
      methodExercised:
        expression: "getRegisterPair(lhs,rhs):pair2"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isInstance(java.lang.Object) :\
        \ boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "lhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "rhs"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "equalsBuilder2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object3"
    - sapientType: "MOCK"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "EqualsBuilder.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean7"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.tuple.MutablePair"
        parameters: []
      valueType: "org.apache.commons.lang3.tuple.MutablePair"
      genericValueType: "org.apache.commons.lang3.builder.IDKey,org.apache.commons.lang3.builder.IDKey"
      uuid: "pair"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.tuple.MutablePair"
        parameters: []
      valueType: "org.apache.commons.lang3.tuple.MutablePair"
      genericValueType: "org.apache.commons.lang3.builder.IDKey,org.apache.commons.lang3.builder.IDKey"
      uuid: "pair2"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
    branches:
    - lineNumber: 939
      expression: "!isEquals"
      range: "(939,13)-(939,21)"
      evaluatedAs: false
    - lineNumber: 942
      expression: "lhs == rhs"
      range: "(942,13)-(942,22)"
      evaluatedAs: false
    - lineNumber: 945
      expression: "lhs == null"
      range: "(945,13)-(945,23)"
      evaluatedAs: false
    - lineNumber: 945
      expression: "rhs == null"
      range: "(945,28)-(945,38)"
      evaluatedAs: false
    - lineNumber: 957
      expression: "lhsClass.isInstance(rhs)"
      range: "(957,13)-(957,36)"
      evaluatedAs: true
    - lineNumber: 959
      expression: "!rhsClass.isInstance(lhs)"
      range: "(959,17)-(959,41)"
      evaluatedAs: true
    - lineNumber: 976
      expression: "testClass.isArray()"
      range: "(976,17)-(976,35)"
      evaluatedAs: false
    - lineNumber: 979
      expression: "bypassReflectionClasses != null"
      range: "(979,17)-(979,47)"
      evaluatedAs: true
    - lineNumber: 980
      expression: "bypassReflectionClasses.contains(lhsClass)"
      range: "(980,25)-(980,66)"
      evaluatedAs: false
    - lineNumber: 980
      expression: "bypassReflectionClasses.contains(rhsClass)"
      range: "(980,71)-(980,112)"
      evaluatedAs: false
    - lineNumber: 1013
      expression: "isRegistered(lhs, rhs)"
      range: "(1013,13)-(1013,34)"
      evaluatedAs: true
      internalMethodName: "reflectionAppend"
    - lineNumber: 984
      expression: "testClass.getSuperclass() != null"
      range: "(984,24)-(984,56)"
      evaluatedAs: true
    - lineNumber: 984
      expression: "testClass != reflectUpToClass"
      range: "(984,61)-(984,89)"
      evaluatedAs: true
    - lineNumber: 333
      expression: "registry == null"
      range: "(333,13)-(333,28)"
      evaluatedAs: true
      internalMethodName: "register"
    - lineNumber: 1021
      expression: "i < fields.length"
      range: "(1021,29)-(1021,45)"
      evaluatedAs: true
      internalMethodName: "reflectionAppend"
    - lineNumber: 1021
      expression: "isEquals"
      range: "(1021,50)-(1021,57)"
      evaluatedAs: true
      internalMethodName: "reflectionAppend"
    - lineNumber: 1023
      expression: "!ArrayUtils.contains(excludeFields, field.getName())"
      range: "(1023,21)-(1023,72)"
      evaluatedAs: true
      internalMethodName: "reflectionAppend"
    - lineNumber: 1024
      expression: "!field.getName().contains(\\\"$\\\")"
      range: "(1024,24)-(1024,53)"
      evaluatedAs: true
      internalMethodName: "reflectionAppend"
    - lineNumber: 1025
      expression: "testTransients"
      range: "(1025,25)-(1025,38)"
      evaluatedAs: false
      internalMethodName: "reflectionAppend"
    - lineNumber: 1026
      expression: "!Modifier.isStatic(field.getModifiers())"
      range: "(1026,24)-(1026,63)"
      evaluatedAs: true
      internalMethodName: "reflectionAppend"
    - lineNumber: 1027
      expression: "!field.isAnnotationPresent(EqualsExclude.class)"
      range: "(1027,24)-(1027,70)"
      evaluatedAs: true
      internalMethodName: "reflectionAppend"
    - lineNumber: 352
      expression: "registry != null"
      range: "(352,13)-(352,28)"
      evaluatedAs: true
      internalMethodName: "unregister"
    - lineNumber: 354
      expression: "registry.isEmpty()"
      range: "(354,17)-(354,34)"
      evaluatedAs: true
      internalMethodName: "unregister"
    mockedStaticClassesWithCallRealMethods:
    - "org.apache.commons.lang3.builder.EqualsBuilder"
- method:
    name: "reset"
    sourceCodeSignature: "void reset()"
    returnType: "void"
    instructionFingerprint: "1D86CD198B148703E8F684DADBC1FE5F"
  paths:
  - testPathName: "resetTest"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      valueUuid: "void"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "VOID"
      uuid: "void"
- method:
    name: "setBypassReflectionClasses"
    sourceCodeSignature: "EqualsBuilder setBypassReflectionClasses(final List<Class<?>>\
      \ bypassReflectionClasses)"
    returnType: "org.apache.commons.lang3.builder.EqualsBuilder"
    parameters:
    - name: "bypassReflectionClasses"
      type: "java.util.List"
      genericType: "java.lang.Class<?>"
    instructionFingerprint: "07F58BACCFA0F9F6077513F643126B64"
  paths:
  - testPathName: "setBypassReflectionClassesTest"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "bypassReflectionClasses"
      valueUuid: "bypassReflectionClasses"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.Class<?>"
      uuid: "bypassReflectionClasses"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
- method:
    name: "setExcludeFields"
    sourceCodeSignature: "EqualsBuilder setExcludeFields(final String... excludeFields)"
    returnType: "org.apache.commons.lang3.builder.EqualsBuilder"
    parameters:
    - name: "excludeFields"
      type: "java.lang.String[]"
    instructionFingerprint: "1BED2CAB75E87E86CFB33E6BB87B9BBF"
  paths:
  - testPathName: "setExcludeFieldsTest"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "excludeFields"
      valueUuid: "excludeFields"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "excludeFields"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
- method:
    name: "setReflectUpToClass"
    sourceCodeSignature: "EqualsBuilder setReflectUpToClass(final Class<?> reflectUpToClass)"
    returnType: "org.apache.commons.lang3.builder.EqualsBuilder"
    parameters:
    - name: "reflectUpToClass"
      type: "java.lang.Class"
      genericType: "?"
    instructionFingerprint: "949AA3133A6FBDB2422229E4E00AE1C9"
  paths:
  - testPathName: "setReflectUpToClassTest"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "reflectUpToClass"
      valueUuid: "reflectUpToClass"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "reflectUpToClass"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
- method:
    name: "setTestRecursive"
    sourceCodeSignature: "EqualsBuilder setTestRecursive(final boolean testRecursive)"
    returnType: "org.apache.commons.lang3.builder.EqualsBuilder"
    parameters:
    - name: "testRecursive"
      type: "boolean"
    instructionFingerprint: "6327C8916BAB6D07AFD0B55F7B1D6387"
  paths:
  - testPathName: "setTestRecursiveTest"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "testRecursive"
      valueUuid: "testRecursive"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "testRecursive"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
- method:
    name: "setTestTransients"
    sourceCodeSignature: "EqualsBuilder setTestTransients(final boolean testTransients)"
    returnType: "org.apache.commons.lang3.builder.EqualsBuilder"
    parameters:
    - name: "testTransients"
      type: "boolean"
    instructionFingerprint: "43F39B2A464972A8ABD1F82923BE0941"
  paths:
  - testPathName: "setTestTransientsTest"
    constructorSignature: "<init>() : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "testTransients"
      valueUuid: "testTransients"
    - type: "RESULT"
      name: "result"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.builder.EqualsBuilder"
        parameters: []
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "testTransients"
    - sapientType: "THIS"
      valueType: "org.apache.commons.lang3.builder.EqualsBuilder"
      uuid: "targetClassObject"
