---
targetClass:
  fullClassName: "org.apache.commons.lang3.BitField"
methods:
- method:
    name: "clear"
    sourceCodeSignature: "int clear(final int holder)"
    returnType: "int"
    parameters:
    - name: "holder"
      type: "int"
    instructionFingerprint: "7C89457178CACA764C8F1991699119C4"
  paths:
  - testPathName: "clearTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "holder"
      valueUuid: "holder"
    - type: "RESULT"
      name: "result"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.BitField"
        parameters:
        - name: "mask"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "mask"
      valueType: "org.apache.commons.lang3.BitField"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "holder"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "expectedResult"
- method:
    name: "clearByte"
    sourceCodeSignature: "byte clearByte(final byte holder)"
    returnType: "byte"
    parameters:
    - name: "holder"
      type: "byte"
    instructionFingerprint: "9D8416F8C5F9EB4C94D51E750EE499F7"
  paths:
  - testPathName: "clearByteTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "holder"
      valueUuid: "holder"
    - type: "RESULT"
      name: "result"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.BitField"
        parameters:
        - name: "mask"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "mask"
      valueType: "org.apache.commons.lang3.BitField"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "byte"
      uuid: "holder"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "byte"
      uuid: "expectedResult"
- method:
    name: "clearShort"
    sourceCodeSignature: "short clearShort(final short holder)"
    returnType: "short"
    parameters:
    - name: "holder"
      type: "short"
    instructionFingerprint: "A0DECF2AC2080ED7D6F8D978222DE495"
  paths:
  - testPathName: "clearShortTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "holder"
      valueUuid: "holder"
    - type: "RESULT"
      name: "result"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.BitField"
        parameters:
        - name: "mask"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "mask"
      valueType: "org.apache.commons.lang3.BitField"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "short"
      uuid: "holder"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "short"
      uuid: "expectedResult"
- method:
    name: "getRawValue"
    sourceCodeSignature: "int getRawValue(final int holder)"
    returnType: "int"
    parameters:
    - name: "holder"
      type: "int"
    instructionFingerprint: "3081CF9219C71DF7A996EF3ED9C3E315"
  paths:
  - testPathName: "getRawValueTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "holder"
      valueUuid: "holder"
    - type: "RESULT"
      name: "result"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.BitField"
        parameters:
        - name: "mask"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "mask"
      valueType: "org.apache.commons.lang3.BitField"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "holder"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "expectedResult"
- method:
    name: "getShortRawValue"
    sourceCodeSignature: "short getShortRawValue(final short holder)"
    returnType: "short"
    parameters:
    - name: "holder"
      type: "short"
    instructionFingerprint: "8737C2AFD69D074B7958FC9508099E14"
  paths:
  - testPathName: "getShortRawValueTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "holder"
      valueUuid: "holder"
    - type: "RESULT"
      name: "result"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.BitField"
        parameters:
        - name: "mask"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "mask"
      valueType: "org.apache.commons.lang3.BitField"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "short"
      uuid: "holder"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "short"
      uuid: "expectedResult"
- method:
    name: "getShortValue"
    sourceCodeSignature: "short getShortValue(final short holder)"
    returnType: "short"
    parameters:
    - name: "holder"
      type: "short"
    instructionFingerprint: "0C9EB287027BA09CB357BD961D7492C8"
  paths:
  - testPathName: "getShortValueTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "holder"
      valueUuid: "holder"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "getValue(holder):int2"
    - type: "RESULT"
      name: "result"
      valueUuid: "short1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.BitField"
        parameters:
        - name: "mask"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "mask"
      valueType: "org.apache.commons.lang3.BitField"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "short"
      uuid: "holder"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "short"
      uuid: "short1"
- method:
    name: "getValue"
    sourceCodeSignature: "int getValue(final int holder)"
    returnType: "int"
    parameters:
    - name: "holder"
      type: "int"
    instructionFingerprint: "71054EA8EDF7C455E0016EE3FF78F12B"
  paths:
  - testPathName: "getValueTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "holder"
      valueUuid: "holder"
    - type: "RESULT"
      name: "result"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.BitField"
        parameters:
        - name: "mask"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "mask"
      valueType: "org.apache.commons.lang3.BitField"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "holder"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "expectedResult"
- method:
    name: "isAllSet"
    sourceCodeSignature: "boolean isAllSet(final int holder)"
    returnType: "boolean"
    parameters:
    - name: "holder"
      type: "int"
    instructionFingerprint: "E1A5DA14BDE17C8F037C25754824B0F5"
  paths:
  - testPathName: "isAllSetWhenHolderAndMaskEqualsMask"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "holder"
      valueUuid: "holder"
    - type: "RESULT"
      name: "result"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.BitField"
        parameters:
        - name: "mask"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "mask"
      valueType: "org.apache.commons.lang3.BitField"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "holder"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
    branches:
    - lineNumber: 198
      expression: "(holder & mask) == mask"
      range: "(198,16)-(198,38)"
      evaluatedAs: true
  - testPathName: "isAllSetWhenHolderAndMaskNotEqualsMask"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "holder"
      valueUuid: "holder"
    - type: "RESULT"
      name: "result"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "BITWISE_NOT_SUPPORTED"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.BitField"
        parameters:
        - name: "mask"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "mask"
      valueType: "org.apache.commons.lang3.BitField"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "holder"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
    branches:
    - lineNumber: 198
      expression: "(holder & mask) == mask"
      range: "(198,16)-(198,38)"
      evaluatedAs: false
- method:
    name: "isSet"
    sourceCodeSignature: "boolean isSet(final int holder)"
    returnType: "boolean"
    parameters:
    - name: "holder"
      type: "int"
    instructionFingerprint: "50AE805B5F4F91F15047AA28980D0725"
  paths:
  - testPathName: "isSetWhenHolderAndMaskNotEquals0"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "holder"
      valueUuid: "holder"
    - type: "RESULT"
      name: "result"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "BITWISE_NOT_SUPPORTED"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.BitField"
        parameters:
        - name: "mask"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "mask"
      valueType: "org.apache.commons.lang3.BitField"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "holder"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
    branches:
    - lineNumber: 215
      expression: "(holder & mask) != 0"
      range: "(215,16)-(215,35)"
      evaluatedAs: true
  - testPathName: "isSetWhenHolderAndMaskEquals0"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "holder"
      valueUuid: "holder"
    - type: "RESULT"
      name: "result"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.BitField"
        parameters:
        - name: "mask"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "mask"
      valueType: "org.apache.commons.lang3.BitField"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "holder"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
    branches:
    - lineNumber: 215
      expression: "(holder & mask) != 0"
      range: "(215,16)-(215,35)"
      evaluatedAs: false
- method:
    name: "set"
    sourceCodeSignature: "int set(final int holder)"
    returnType: "int"
    parameters:
    - name: "holder"
      type: "int"
    instructionFingerprint: "58B435315D19E4616040D51D7F47C3F8"
  paths:
  - testPathName: "setTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "holder"
      valueUuid: "holder"
    - type: "RESULT"
      name: "result"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.BitField"
        parameters:
        - name: "mask"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "mask"
      valueType: "org.apache.commons.lang3.BitField"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "holder"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "expectedResult"
- method:
    name: "setBoolean"
    sourceCodeSignature: "int setBoolean(final int holder, final boolean flag)"
    returnType: "int"
    parameters:
    - name: "holder"
      type: "int"
    - name: "flag"
      type: "boolean"
    instructionFingerprint: "8C1C8F5AF780503941BACDF74E4DE038"
  paths:
  - testPathName: "setBooleanWhenFlag"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "holder"
      valueUuid: "holder"
    - type: "INPUT"
      name: "flag"
      valueUuid: "flag"
    - type: "RESULT"
      name: "result"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.BitField"
        parameters:
        - name: "mask"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "mask"
      valueType: "org.apache.commons.lang3.BitField"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "holder"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "flag"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "expectedResult"
    branches:
    - lineNumber: 240
      expression: "flag"
      range: "(240,16)-(240,19)"
      evaluatedAs: true
  - testPathName: "setBooleanWhenNotFlag"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "holder"
      valueUuid: "holder"
    - type: "INPUT"
      name: "flag"
      valueUuid: "flag"
    - type: "RESULT"
      name: "result"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.BitField"
        parameters:
        - name: "mask"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "mask"
      valueType: "org.apache.commons.lang3.BitField"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "holder"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "flag"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "expectedResult"
    branches:
    - lineNumber: 240
      expression: "flag"
      range: "(240,16)-(240,19)"
      evaluatedAs: false
- method:
    name: "setByte"
    sourceCodeSignature: "byte setByte(final byte holder)"
    returnType: "byte"
    parameters:
    - name: "holder"
      type: "byte"
    instructionFingerprint: "E2512FD6B1080B0F4BE8084547A25007"
  paths:
  - testPathName: "setByteTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "holder"
      valueUuid: "holder"
    - type: "RESULT"
      name: "result"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.BitField"
        parameters:
        - name: "mask"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "mask"
      valueType: "org.apache.commons.lang3.BitField"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "byte"
      uuid: "holder"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "byte"
      uuid: "expectedResult"
- method:
    name: "setByteBoolean"
    sourceCodeSignature: "byte setByteBoolean(final byte holder, final boolean flag)"
    returnType: "byte"
    parameters:
    - name: "holder"
      type: "byte"
    - name: "flag"
      type: "boolean"
    instructionFingerprint: "6023CC7E74BBAA8DE63B72F53D5B06BB"
  paths:
  - testPathName: "setByteBooleanWhenFlag"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "holder"
      valueUuid: "holder"
    - type: "INPUT"
      name: "flag"
      valueUuid: "flag"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "setByte(holder):byte1"
    - type: "RESULT"
      name: "result"
      valueUuid: "byte1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.BitField"
        parameters:
        - name: "mask"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "mask"
      valueType: "org.apache.commons.lang3.BitField"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "byte"
      uuid: "holder"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "flag"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "byte"
      uuid: "byte1"
    branches:
    - lineNumber: 266
      expression: "flag"
      range: "(266,16)-(266,19)"
      evaluatedAs: true
  - testPathName: "setByteBooleanWhenNotFlag"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "holder"
      valueUuid: "holder"
    - type: "INPUT"
      name: "flag"
      valueUuid: "flag"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "clearByte(holder):byte1"
    - type: "RESULT"
      name: "result"
      valueUuid: "byte1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.BitField"
        parameters:
        - name: "mask"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "mask"
      valueType: "org.apache.commons.lang3.BitField"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "byte"
      uuid: "holder"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "flag"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "byte"
      uuid: "byte1"
    branches:
    - lineNumber: 266
      expression: "flag"
      range: "(266,16)-(266,19)"
      evaluatedAs: false
- method:
    name: "setShort"
    sourceCodeSignature: "short setShort(final short holder)"
    returnType: "short"
    parameters:
    - name: "holder"
      type: "short"
    instructionFingerprint: "F5B3E18B7ABB764B5CE9454A40A234DC"
  paths:
  - testPathName: "setShortTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "holder"
      valueUuid: "holder"
    - type: "RESULT"
      name: "result"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.BitField"
        parameters:
        - name: "mask"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "mask"
      valueType: "org.apache.commons.lang3.BitField"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "short"
      uuid: "holder"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "short"
      uuid: "expectedResult"
- method:
    name: "setShortBoolean"
    sourceCodeSignature: "short setShortBoolean(final short holder, final boolean\
      \ flag)"
    returnType: "short"
    parameters:
    - name: "holder"
      type: "short"
    - name: "flag"
      type: "boolean"
    instructionFingerprint: "F5A39E40F528B6C04184F12D38984927"
  paths:
  - testPathName: "setShortBooleanWhenFlag"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "holder"
      valueUuid: "holder"
    - type: "INPUT"
      name: "flag"
      valueUuid: "flag"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "setShort(holder):short1"
    - type: "RESULT"
      name: "result"
      valueUuid: "short1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.BitField"
        parameters:
        - name: "mask"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "mask"
      valueType: "org.apache.commons.lang3.BitField"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "short"
      uuid: "holder"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "flag"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "short"
      uuid: "short1"
    branches:
    - lineNumber: 291
      expression: "flag"
      range: "(291,16)-(291,19)"
      evaluatedAs: true
  - testPathName: "setShortBooleanWhenNotFlag"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "holder"
      valueUuid: "holder"
    - type: "INPUT"
      name: "flag"
      valueUuid: "flag"
    - type: "INTERNAL"
      name: "internalMethod"
      methodExercised:
        expression: "clearShort(holder):short1"
    - type: "RESULT"
      name: "result"
      valueUuid: "short1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.BitField"
        parameters:
        - name: "mask"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "mask"
      valueType: "org.apache.commons.lang3.BitField"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "short"
      uuid: "holder"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "flag"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "short"
      uuid: "short1"
    branches:
    - lineNumber: 291
      expression: "flag"
      range: "(291,16)-(291,19)"
      evaluatedAs: false
- method:
    name: "setShortValue"
    sourceCodeSignature: "short setShortValue(final short holder, final short value)"
    returnType: "short"
    parameters:
    - name: "holder"
      type: "short"
    - name: "value"
      type: "short"
    instructionFingerprint: "9ECE246998121C2FEB1CEFF421C98488"
  paths:
  - testPathName: "setShortValueTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "holder"
      valueUuid: "holder"
    - type: "INPUT"
      name: "value"
      valueUuid: "value"
    - type: "RESULT"
      name: "result"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.BitField"
        parameters:
        - name: "mask"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "mask"
      valueType: "org.apache.commons.lang3.BitField"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "short"
      uuid: "holder"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "short"
      uuid: "value"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "short"
      uuid: "expectedResult"
- method:
    name: "setValue"
    sourceCodeSignature: "int setValue(final int holder, final int value)"
    returnType: "int"
    parameters:
    - name: "holder"
      type: "int"
    - name: "value"
      type: "int"
    instructionFingerprint: "08C390A2FDB3FF9910F6A3E4C75F5AF2"
  paths:
  - testPathName: "setValueTest"
    constructorSignature: "<init>(int) : void"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      name: "constructor"
      valueUuid: "target"
    - type: "INPUT"
      name: "holder"
      valueUuid: "holder"
    - type: "INPUT"
      name: "value"
      valueUuid: "value"
    - type: "RESULT"
      name: "result"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.lang3.BitField"
        parameters:
        - name: "mask"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "mask"
      valueType: "org.apache.commons.lang3.BitField"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "holder"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "value"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "expectedResult"
